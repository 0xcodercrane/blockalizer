import React, { useState, useEffect, useRef } from "react";
import Sketch from "react-p5";
import p5Types from "p5";
import "../App.css";

import { ConnectKitButton } from "connectkit";
import { useSigner } from "wagmi";

import { createSiweMessage } from "../helper/wallet";
import { fetchBlocks, sendImage } from "../helper/server";

import "./Playground.css";

import {
  assign_sketch,
  load_colors,
  all_sketch_styles,
} from "../helper/sketch";

import GenericSketch from "../art-styles/generic_sketch";
import ReactPaginate from 'react-paginate';

interface ComponentProps {
  pageState: string,
  onChange: any
    
  
}

const Playground: React.FC<ComponentProps> = (props: ComponentProps) => {
  const styles = all_sketch_styles();
  const [selectedStyle, setStyle] = useState("none");
  const [selectedSeed, setSeed] = useState("0");
  const [noFill, setNoFill] = useState(false);
  const authorizeRequired = false;

  // In order of how the palette is generated. Ideally it would be
  // best if the names would come from the data. But I will get to
  // that later
  const colorNames = ["Alpine", "Lavendar", "Tidal", "Crimson"];
  const [chroma, setChroma] = useState("Alpine");
  const [blocks, setBlocks] = useState([""]);
  const [address, setAddress] = useState(""); // cache address so it is not refreshed everytime
  const [numberOfBlocks, setNumberOfBlocks] = useState(0);
  const [index, setIndex] = useState(0);
  

  const signedOutApp = () => {
    setStyle("none");
    setAddress("");
    setBlocks([]);
  };

  const signedInApp = () => {
    setStyle("triangles");
  };

  /* CONTROL */
  const [numOfBoxes, setNumOfBoxes] = useState(9);
  const [tetri, setTetri] = useState(0);

  const keyGenerator = () => {
    return (
      selectedSeed +
      selectedStyle +
      numOfBoxes.toString() +
      tetri.toString() +
      chroma +
      noFill.toString()
    );
  };

  const [uniqueKey, setUniqueKey] = useState(keyGenerator());

  const lazySetBlocks = async () => {
    if (signer) {
      const newAddress = await signer.getAddress();
      if (newAddress == address) return;

      setAddress(newAddress);
      try {
        const result = await fetchBlocks(newAddress);
        setBlocks(result);
        setNumberOfBlocks(result.length);
        //add if conditional for empty case
        setSeed(result[0])
    
      } catch (e) {
        console.error(e);
      }
    }
  };

  useEffect(() => {
    regenerate();

    if (signer === null) {
      signedOutApp();
    } else {
      lazySetBlocks();
      
    }
  });

  useEffect(() => {
    if (blocks.length > 0) {
      signedInApp();
    }
  }, [blocks]);

  const canvasWidth: number = 400;
  const canvasHeight: number = 400;
  let sketch: GenericSketch;

  const preload = (p5: p5Types) => {
    let paletteIndex = colorNames.indexOf(chroma);
    let table: p5Types.Table = load_colors();
    let opts = {
      numOfBoxes: numOfBoxes,
      opacity: 255, // using fixed opacity
      strokeWidth: 1.5, // using fixed stroke width
      paletteIndex: paletteIndex,
      opacitySwitch: true,
      noFill: noFill,
      removeBlocks: tetri,
    };

    sketch = assign_sketch(
      p5,
      canvasWidth,
      canvasHeight,
      table,
      selectedSeed,
      selectedStyle,
      opts
    );
  };

  const setup = (p5: p5Types, canvasParentRef: Element) => {
    console.log("canvas setup again...");
    sketch.setup(canvasParentRef);
  };

  const draw = (p5: p5Types) => {
    console.log("DRAW", selectedStyle);
    // p5.background(230);
    sketch.draw();
  };

  const regenerate = () => {
    if (uniqueKey != keyGenerator()) {
      setUniqueKey(keyGenerator());
      // p5Instance.redraw();
      console.log("unique key changed...");
    }
  };

  const { data: signer, isError, isLoading } = useSigner();

  const authorize = async () => {
    if (!signer) return;

    const address = await signer.getAddress();
    const message = createSiweMessage(address, "This is a test statement.");
    signer.signMessage(message);
  };

  const save = async (e: React.SyntheticEvent) => {
    if (sketchRef && sketchRef.current) {
      // @ts-ignore: Object is possibly 'null'.
      const canvas: any = sketchRef.current.sketch.canvas;
      const dataURL = canvas.toDataURL();
      try {
        const result = await sendImage(dataURL);
        console.log("successfully sent", result);
      } catch (e) {
        console.error(e);
      }
    }
  };

  const numOfBoxesHandler = (e: React.ChangeEvent<HTMLInputElement>) => {
    setNumOfBoxes(parseInt(e.currentTarget.value));
  };

  const tetriHandler = (e: React.ChangeEvent<HTMLInputElement>) => {
    setTetri(parseInt(e.currentTarget.value));
  };

  const chromaHandler = (e: any) => {
    setChroma(e.target.value);
  };

  const fillHandler = (e: any) => {
    const noFill = e.currentTarget.value === "No" ? true : false;
    console.log(noFill);
    setNoFill(noFill);
  };

  const blockHandler = (e: any) => {
    console.log(e.target.value, e.currentTarget.value);
    setSeed(e.target.value);
    //console.log(e)
    
  };

  const chromeSelector = colorNames.map((c, i) => (
    <div>
      <label>
        <input
          type="radio"
          value={c}
          checked={chroma === c}
          onChange={chromaHandler}
        />
        {c}
      </label>
    </div>
  ));

  const gridControl = (
    <div>
      Grid Size
      <input
        type="range"
        min="3"
        max="12"
        defaultValue="9"
        step="3"
        onChange={numOfBoxesHandler}
      />
      {numOfBoxes}
    </div>
  );

  const fillSelector = (
    <div>
      <div>
        <label>
          <input
            type="radio"
            value={"Yes"}
            checked={!noFill}
            onChange={fillHandler}
          />
          Yes
        </label>
      </div>
      <div>
        <label>
          <input
            type="radio"
            value={"No"}
            checked={noFill}
            onChange={fillHandler}
          />
          No
        </label>
      </div>
    </div>
  );

  const tetriControl = (
    <div>
      Anti-Block
      <input
        type="range"
        min="0"
        max="3"
        defaultValue="0"
        step="1"
        onChange={tetriHandler}
      />
      {tetri}
    </div>
  );

  const blocksControl = blocks.map((b, i) => (
      <button id={b} onClick={blockHandler} value={b} className={`{ ${(selectedSeed === b ? 'bg-white' : 'bg-button')} mt-2 mb-2 py-1 lg:px-4 md:px-3 sm:px-2 shadow-md no-underline rounded-full text-sm ml-1 mr-1 ${selectedSeed === b ? 'text-buttonActiveText' : 'text-buttonText'}`}>
        #{b}
      </button>
 
  ));

  const sketchRef = useRef(null);

  

  return (
    <div className="innerContainer" onKeyDown={(e) => {
      if((e.key == "ArrowRight") )
      {
        if(((blocks.indexOf(selectedSeed) + 1) === blocks.length))
        {
          setSeed(blocks[0])
        }
        else
        {
        setSeed(blocks[(blocks.indexOf(selectedSeed) + 1)])
        }
      }
      else if((e.key == "ArrowLeft") )
      {
        if((blocks.indexOf(selectedSeed) - 1) === -1)
                    {
                      setSeed(blocks[blocks.length - 1])
                    }
                    else
                    {
                    setSeed(blocks[(blocks.indexOf(selectedSeed) - 1)])
                    }
      }
      }} tabIndex={0}>
      

      
      <div className="blockalizerDivLeft">
        <div className="lg:w-full md:w-full sm:w-full break-words bg-green lg:mt-16 md:mt-20 sm:mt-14 lg:pt-0 md:pt-10 sm:pt-0">
          <div className="lg:m-auto md:m-auto sm:ml-[10%] sm:mr-[10%] sm:mt-[0%] sm:mb-[0%] lg:12/12 md:w-6/12 sm:w-9/12">
            <div className="lg:hidden md:block sm:block">
              <span className="block mb-4"></span>
            </div>

            <div className="w-[60%] lg:ml-5 md:ml-2 sm:ml-2" onClick={(e) => {props.onChange("Home")}} role="button">
              <svg viewBox="0 0 273 50" fill="none" xmlns="http://www.w3.org/2000/svg" onClick={(e) => {props.onChange("Home")}}>
                <path d="M22.9859 37.3325H20V10.5359H22.9859V21.3311H23.4453C24.1088 20.1827 25.0276 19.315 26.2015 18.728C27.3754 18.1155 28.6515 17.8093 30.0296 17.8093C31.2035 17.8093 32.3137 18.0262 33.36 18.4601C34.4064 18.8939 35.3251 19.5192 36.1162 20.3358C36.9329 21.1525 37.5709 22.1606 38.0303 23.36C38.5152 24.5595 38.7576 25.9248 38.7576 27.4561V28.2217C38.7576 29.7784 38.5279 31.1566 38.0686 32.356C37.6092 33.5555 36.9712 34.5636 36.1545 35.3802C35.3634 36.1969 34.4319 36.8221 33.36 37.256C32.2882 37.6643 31.1525 37.8685 29.953 37.8685C29.3405 37.8685 28.7153 37.7919 28.0773 37.6388C27.4392 37.5112 26.8268 37.307 26.2398 37.0263C25.6783 36.72 25.1552 36.3628 24.6703 35.9544C24.1854 35.5206 23.777 35.0102 23.4453 34.4232H22.9859V37.3325ZM29.3405 35.0357C30.2593 35.0357 31.1014 34.8826 31.8671 34.5763C32.6327 34.2445 33.2962 33.7852 33.8577 33.1982C34.4446 32.6112 34.8913 31.8967 35.1975 31.0545C35.5293 30.2123 35.6952 29.268 35.6952 28.2217V27.4561C35.6952 26.4353 35.5293 25.5165 35.1975 24.6999C34.8913 23.8577 34.4446 23.1431 33.8577 22.5561C33.2962 21.9436 32.6199 21.4715 31.8288 21.1397C31.0632 20.808 30.2338 20.6421 29.3405 20.6421C28.4473 20.6421 27.6179 20.8207 26.8523 21.178C26.0867 21.5098 25.4104 21.9819 24.8234 22.5944C24.2619 23.2069 23.8153 23.947 23.4836 24.8147C23.1518 25.6569 22.9859 26.5884 22.9859 27.6092V28.0686C22.9859 29.1149 23.1518 30.0719 23.4836 30.9396C23.8153 31.7818 24.2619 32.5091 24.8234 33.1216C25.4104 33.7341 26.0867 34.2063 26.8523 34.538C27.6179 34.8698 28.4473 35.0357 29.3405 35.0357Z" fill="white"/>
                <path d="M44.1286 34.5763H51.0192V13.2922H44.3583V10.5359H54.0051V34.5763H60.8956V37.3325H44.1286V34.5763Z" fill="white"/>
                <path d="M85.4836 28.0686C85.4836 29.6508 85.2156 31.0545 84.6797 32.2795C84.1693 33.4789 83.4802 34.4998 82.6125 35.3419C81.7448 36.1586 80.724 36.7838 79.5501 37.2177C78.4016 37.6515 77.2022 37.8685 75.9517 37.8685C74.6756 37.8685 73.4634 37.6515 72.315 37.2177C71.1666 36.7838 70.1585 36.1586 69.2908 35.3419C68.4231 34.4998 67.7213 33.4789 67.1853 32.2795C66.6749 31.0545 66.4197 29.6508 66.4197 28.0686V27.6092C66.4197 26.0524 66.6749 24.6743 67.1853 23.4749C67.7213 22.2499 68.4231 21.2163 69.2908 20.3741C70.184 19.5319 71.2048 18.8939 72.3533 18.4601C73.5017 18.0262 74.7012 17.8093 75.9517 17.8093C77.2022 17.8093 78.4016 18.0262 79.5501 18.4601C80.6985 18.8939 81.7066 19.5319 82.5743 20.3741C83.4675 21.2163 84.1693 22.2499 84.6797 23.4749C85.2156 24.6743 85.4836 26.0524 85.4836 27.6092V28.0686ZM75.9517 35.0357C76.8704 35.0357 77.7126 34.8826 78.4782 34.5763C79.2693 34.2445 79.9584 33.7724 80.5454 33.1599C81.1323 32.5474 81.5917 31.8201 81.9235 30.9779C82.2552 30.1102 82.4211 29.1404 82.4211 28.0686V27.6092C82.4211 26.5884 82.2552 25.6569 81.9235 24.8147C81.5917 23.947 81.1323 23.2069 80.5454 22.5944C79.9584 21.9819 79.2693 21.5098 78.4782 21.178C77.6871 20.8207 76.8449 20.6421 75.9517 20.6421C75.0584 20.6421 74.2163 20.8207 73.4251 21.178C72.634 21.5098 71.9449 21.9819 71.358 22.5944C70.771 23.2069 70.3116 23.947 69.9799 24.8147C69.6481 25.6569 69.4822 26.5884 69.4822 27.6092V28.0686C69.4822 29.1404 69.6481 30.1102 69.9799 30.9779C70.3116 31.8201 70.771 32.5474 71.358 33.1599C71.9449 33.7724 72.6212 34.2445 73.3868 34.5763C74.178 34.8826 75.0329 35.0357 75.9517 35.0357Z" fill="white"/>
                <path d="M108.77 30.5951C108.566 31.6414 108.209 32.6112 107.698 33.5045C107.213 34.3977 106.588 35.176 105.822 35.8396C105.057 36.4776 104.164 36.9752 103.143 37.3325C102.122 37.6898 100.986 37.8685 99.7357 37.8685C98.4087 37.8685 97.1454 37.6515 95.9459 37.2177C94.772 36.7838 93.7384 36.1586 92.8452 35.3419C91.952 34.4998 91.2374 33.4789 90.7015 32.2795C90.191 31.08 89.9358 29.7019 89.9358 28.1451V27.6858C89.9358 26.1545 90.191 24.7764 90.7015 23.5514C91.2374 22.3264 91.952 21.2929 92.8452 20.4507C93.7384 19.6085 94.772 18.9577 95.9459 18.4984C97.1454 18.039 98.4087 17.8093 99.7357 17.8093C100.935 17.8093 102.045 17.9879 103.066 18.3452C104.087 18.7025 104.98 19.2129 105.746 19.8765C106.537 20.5145 107.175 21.2801 107.66 22.1733C108.17 23.0665 108.515 24.0363 108.693 25.0827L105.708 25.7717C105.631 25.1082 105.44 24.4702 105.133 23.8577C104.853 23.2197 104.457 22.671 103.947 22.2116C103.462 21.7267 102.862 21.3439 102.147 21.0632C101.433 20.7824 100.603 20.6421 99.6592 20.6421C98.7404 20.6421 97.8727 20.8207 97.0561 21.178C96.2649 21.5098 95.5631 21.9947 94.9506 22.6327C94.3381 23.2452 93.8532 23.9853 93.496 24.853C93.1642 25.7207 92.9983 26.6649 92.9983 27.6858V28.1451C92.9983 29.217 93.1642 30.1868 93.496 31.0545C93.8532 31.8967 94.3381 32.6112 94.9506 33.1982C95.5631 33.7852 96.2777 34.2445 97.0944 34.5763C97.911 34.8826 98.7915 35.0357 99.7357 35.0357C100.68 35.0357 101.497 34.8953 102.186 34.6146C102.9 34.3083 103.5 33.9255 103.985 33.4662C104.495 32.9813 104.891 32.4326 105.172 31.8201C105.478 31.2076 105.682 30.5696 105.784 29.906L108.77 30.5951Z" fill="white"/>
                <path d="M119.347 26.2311H119.998L127.233 18.3452H130.908V18.5749L123.022 27.2647V27.9537L131.827 37.1029V37.3325H128.152L120.075 28.9873H119.347V37.3325H116.361V10.5359H119.347V26.2311Z" fill="white"/>
                <path d="M151.668 34.1169H151.209C150.596 35.393 149.741 36.3372 148.644 36.9497C147.572 37.5622 146.436 37.8685 145.237 37.8685C143.986 37.8685 142.825 37.6643 141.753 37.256C140.681 36.8221 139.737 36.1969 138.92 35.3802C138.129 34.538 137.504 33.5172 137.045 32.3177C136.585 31.1183 136.356 29.7274 136.356 28.1451V27.5326C136.356 25.9759 136.585 24.5978 137.045 23.3983C137.504 22.1988 138.129 21.1908 138.92 20.3741C139.737 19.5319 140.681 18.8939 141.753 18.4601C142.825 18.0262 143.961 17.8093 145.16 17.8093C146.462 17.8093 147.636 18.1028 148.682 18.6898C149.754 19.2512 150.596 20.1317 151.209 21.3311H151.668V18.3452H154.654V33.4279C154.654 34.1935 154.998 34.5763 155.687 34.5763H156.644V37.3325H154.616C153.748 37.3325 153.033 37.0518 152.472 36.4904C151.936 35.9289 151.668 35.2143 151.668 34.3466V34.1169ZM145.543 35.0357C146.436 35.0357 147.253 34.8698 147.993 34.538C148.759 34.2063 149.409 33.7341 149.945 33.1216C150.481 32.5091 150.902 31.7818 151.209 30.9396C151.515 30.0719 151.668 29.1149 151.668 28.0686V27.6092C151.668 26.5884 151.515 25.6569 151.209 24.8147C150.902 23.947 150.468 23.2069 149.907 22.5944C149.371 21.9819 148.72 21.5098 147.955 21.178C147.215 20.8207 146.411 20.6421 145.543 20.6421C144.65 20.6421 143.833 20.808 143.093 21.1397C142.353 21.4715 141.702 21.9436 141.141 22.5561C140.605 23.1431 140.184 23.8704 139.877 24.7381C139.571 25.5803 139.418 26.5118 139.418 27.5326V28.1451C139.418 30.3144 139.979 32.0115 141.102 33.2365C142.251 34.436 143.731 35.0357 145.543 35.0357Z" fill="white"/>
                <path d="M161.326 34.5763H168.217V13.2922H161.556V10.5359H171.203V34.5763H178.093V37.3325H161.326V34.5763Z" fill="white"/>
                <path d="M190.661 12.6797C190.661 11.9396 190.916 11.3143 191.427 10.8039C191.963 10.268 192.601 10 193.341 10C194.081 10 194.706 10.268 195.217 10.8039C195.753 11.3143 196.02 11.9396 196.02 12.6797C196.02 13.4198 195.753 14.0578 195.217 14.5937C194.706 15.1041 194.081 15.3593 193.341 15.3593C192.601 15.3593 191.963 15.1041 191.427 14.5937C190.916 14.0578 190.661 13.4198 190.661 12.6797ZM185.225 34.5763H191.886V21.1015H185.914V18.3452H194.872V34.5763H201.074V37.3325H185.225V34.5763Z" fill="white"/>
                <path d="M233.827 28.7576C233.904 30.6461 234.491 32.1646 235.588 33.313C236.685 34.4615 238.217 35.0357 240.182 35.0357C241.075 35.0357 241.853 34.9336 242.517 34.7294C243.18 34.5253 243.742 34.2445 244.201 33.8873C244.686 33.53 245.069 33.1216 245.35 32.6623C245.656 32.1774 245.898 31.667 246.077 31.131L248.91 31.8967C248.374 33.6576 247.378 35.0995 245.924 36.2224C244.495 37.3198 242.555 37.8685 240.105 37.8685C238.752 37.8685 237.502 37.6388 236.354 37.1794C235.231 36.6945 234.261 36.0182 233.444 35.1505C232.628 34.2828 231.99 33.2492 231.53 32.0498C231.071 30.8503 230.841 29.5232 230.841 28.0686V27.1498C230.841 25.8228 231.071 24.585 231.53 23.4366C232.015 22.2882 232.679 21.3056 233.521 20.489C234.363 19.6468 235.345 18.996 236.468 18.5366C237.617 18.0517 238.855 17.8093 240.182 17.8093C241.738 17.8093 243.078 18.1028 244.201 18.6898C245.35 19.2512 246.281 19.953 246.996 20.7952C247.736 21.6374 248.272 22.5561 248.603 23.5514C248.961 24.5467 249.139 25.4655 249.139 26.3076V28.7576H233.827ZM240.182 20.6421C239.339 20.6421 238.548 20.7824 237.808 21.0632C237.094 21.3184 236.456 21.6884 235.894 22.1733C235.358 22.6582 234.912 23.2324 234.554 23.896C234.223 24.534 234.006 25.2358 233.904 26.0014H246.153C246.102 25.1847 245.898 24.4446 245.541 23.7811C245.209 23.1176 244.763 22.5561 244.201 22.0968C243.665 21.6374 243.04 21.2801 242.325 21.0249C241.636 20.7697 240.922 20.6421 240.182 20.6421Z" fill="white"/>
                <path d="M254.013 18.3452H260.903V20.8718H261.363C261.848 19.8254 262.537 19.0598 263.43 18.5749C264.323 18.0645 265.344 17.8093 266.492 17.8093C268.406 17.8093 269.95 18.4345 271.124 19.6851C272.298 20.9356 272.923 22.7603 273 25.1592L269.861 25.6186C269.861 23.8577 269.44 22.5944 268.598 21.8288C267.756 21.0376 266.722 20.6421 265.497 20.6421C264.706 20.6421 264.017 20.7952 263.43 21.1015C262.868 21.4077 262.396 21.8288 262.013 22.3647C261.631 22.9007 261.35 23.5259 261.171 24.2405C260.993 24.9551 260.903 25.7207 260.903 26.5373V34.5763H265.727V37.3325H253.553V34.5763H257.917V21.1015H254.013V18.3452Z" fill="white"/>
                <path fill-rule="evenodd" clip-rule="evenodd" d="M223.118 21.3822H209.826V34.6741H223.118V21.3822ZM207.168 18.7238V37.3325H225.777V18.7238H207.168Z" fill="white"/>
                <path fill-rule="evenodd" clip-rule="evenodd" d="M208.089 34.5318L222.976 19.6448L224.856 21.5245L209.969 36.4115L208.089 34.5318Z" fill="white"/>
                <rect width="2" height="50" fill="#ADFFD8"/>
              </svg>
            </div>

            <span className="block"></span>
          </div>
        </div>
      </div>



      <div className="lg:w-6/12 pt-4 lg:block md:block sm:block md:w-[100%] sm:w-[100%]">
        <div className="lg:w-[70%] lg:ml-[30%] md:w-[90%] md:m-auto sm:w-[90%] sm:m-auto">
          <h1 className="lg:text-lg md:text-lg sm:text-md text-neutral-500 ml-[10%]" id="specialIndicator">
            #{selectedSeed}
          </h1>
          <span className="block mt-4"></span>

          <div className="m-auto w-[100%] flex flex-row flex-wrap">            
            <button className="w-[10%] flex" onClick={(e) => {
              if((blocks.indexOf(selectedSeed) - 1) === -1)
              {
                setSeed(blocks[blocks.length - 1])
              }
              else
              {
              setSeed(blocks[(blocks.indexOf(selectedSeed) - 1)])
              }
            }}>

              <svg className="align-middle w-full m-auto w-[60%] mr-[40%]" viewBox="0 0 26 68" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M23 66L3 34L23 2" stroke="#EBEBEB" stroke-opacity="0.24" stroke-width="5"/>
              </svg>

            </button>

            <div className="w-[80%]">
             {/* <div className="m-auto w-full">
                <svg
                  viewBox="0 0 353 351"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <rect
                    x="1"
                    y="1"
                    width="351"
                    height="348"
                    stroke="white"
                    stroke-width="2"
                  />
                  <path
                    d="M351 2L3.5 349.5"
                    stroke="#EBEBEB"
                    stroke-width="2"
                  />
                </svg>
          </div>*/}
                <Sketch
                  ref={sketchRef}
                  key={uniqueKey}
                  setup={setup}
                  draw={draw}
                  preload={preload}
        />
            </div>

                 
            <button className="w-[10%] flex" onClick={(e) => {
                if((blocks.indexOf(selectedSeed) + 1) === blocks.length)
                {
                  setSeed(blocks[0])
                }
                else
                {
                setSeed(blocks[(blocks.indexOf(selectedSeed) + 1)])
                }
              }}>
              <svg className="align-middle w-full m-auto w-[60%] ml-[40%]"  viewBox="0 0 26 68" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M3 2L23 34L3 66" stroke="#EBEBEB" stroke-opacity="0.24" stroke-width="5"/>
              </svg>
            </button>


            <div className="w-[10%] flex">

            </div>

            <div className="w-[80%]">
            <span className="block mt-8"></span>
            <svg viewBox="0 0 347 241" fill="none" xmlns="http://www.w3.org/2000/svg">

            
              <g id="headerGRIDSIZE">
                <path d="M11.824 12.624H16.816V18H15.568V16.656H15.376C15.1947 17.1253 14.8747 17.504 14.416 17.792C13.9573 18.08 13.424 18.224 12.816 18.224C11.6107 18.224 10.6613 17.8347 9.968 17.056C9.28533 16.2773 8.944 15.1413 8.944 13.648V11.152C8.944 9.70133 9.29067 8.576 9.984 7.776C10.6773 6.976 11.6427 6.576 12.88 6.576C13.52 6.576 14.0853 6.68267 14.576 6.896C15.0667 7.09867 15.4773 7.38667 15.808 7.76C16.1387 8.12267 16.3893 8.55467 16.56 9.056C16.7307 9.54667 16.816 10.0747 16.816 10.64V10.832H15.472V10.64C15.472 10.2773 15.4187 9.92533 15.312 9.584C15.216 9.24267 15.0613 8.944 14.848 8.688C14.6453 8.42133 14.3787 8.21333 14.048 8.064C13.728 7.904 13.3387 7.824 12.88 7.824C12.016 7.824 11.3653 8.13867 10.928 8.768C10.5013 9.39733 10.288 10.224 10.288 11.248V13.552C10.288 14.6507 10.5013 15.4987 10.928 16.096C11.3653 16.6827 12.0267 16.976 12.912 16.976C13.712 16.976 14.336 16.72 14.784 16.208C15.2427 15.696 15.472 14.9813 15.472 14.064V13.872H11.824V12.624ZM18.7409 10.064H21.6209V11.12H21.8129C22.0155 10.6827 22.3035 10.3627 22.6769 10.16C23.0502 9.94667 23.4769 9.84 23.9569 9.84C24.7569 9.84 25.4022 10.1013 25.8929 10.624C26.3835 11.1467 26.6449 11.9093 26.6769 12.912L25.3649 13.104C25.3649 12.368 25.1889 11.84 24.8369 11.52C24.4849 11.1893 24.0529 11.024 23.5409 11.024C23.2102 11.024 22.9222 11.088 22.6769 11.216C22.4422 11.344 22.2449 11.52 22.0849 11.744C21.9249 11.968 21.8075 12.2293 21.7329 12.528C21.6582 12.8267 21.6209 13.1467 21.6209 13.488V16.848H23.6369V18H18.5489V16.848H20.3729V11.216H18.7409V10.064ZM31.4498 7.696C31.4498 7.38667 31.5564 7.12533 31.7698 6.912C31.9938 6.688 32.2604 6.576 32.5698 6.576C32.8791 6.576 33.1404 6.688 33.3538 6.912C33.5778 7.12533 33.6898 7.38667 33.6898 7.696C33.6898 8.00533 33.5778 8.272 33.3538 8.496C33.1404 8.70933 32.8791 8.816 32.5698 8.816C32.2604 8.816 31.9938 8.70933 31.7698 8.496C31.5564 8.272 31.4498 8.00533 31.4498 7.696ZM29.1778 16.848H31.9618V11.216H29.4658V10.064H33.2098V16.848H35.8018V18H29.1778V16.848ZM44.9266 16.784H44.7346C44.6066 17.0293 44.4413 17.2427 44.2386 17.424C44.0466 17.6053 43.8333 17.7547 43.5986 17.872C43.3746 17.9893 43.1346 18.0747 42.8786 18.128C42.6226 18.192 42.3773 18.224 42.1426 18.224C41.6093 18.224 41.1133 18.1333 40.6546 17.952C40.196 17.7707 39.7906 17.5093 39.4386 17.168C39.0973 16.8267 38.8253 16.4053 38.6226 15.904C38.4306 15.392 38.3346 14.8107 38.3346 14.16V13.904C38.3346 13.264 38.436 12.6933 38.6386 12.192C38.8413 11.68 39.1133 11.2533 39.4546 10.912C39.796 10.56 40.196 10.2933 40.6546 10.112C41.1133 9.93067 41.5986 9.84 42.1106 9.84C42.6546 9.84 43.1613 9.96267 43.6306 10.208C44.1106 10.4427 44.4786 10.8107 44.7346 11.312H44.9266V6.8H46.1746V18H44.9266V16.784ZM42.2706 17.04C42.644 17.04 42.9906 16.9707 43.3106 16.832C43.6306 16.6933 43.908 16.496 44.1426 16.24C44.388 15.984 44.58 15.68 44.7186 15.328C44.8573 14.9653 44.9266 14.5653 44.9266 14.128V13.936C44.9266 13.5093 44.8573 13.12 44.7186 12.768C44.58 12.4053 44.388 12.096 44.1426 11.84C43.908 11.584 43.6253 11.3867 43.2946 11.248C42.9746 11.0987 42.6333 11.024 42.2706 11.024C41.8973 11.024 41.5453 11.0933 41.2146 11.232C40.8946 11.3707 40.612 11.568 40.3666 11.824C40.132 12.08 39.9453 12.384 39.8066 12.736C39.6786 13.088 39.6146 13.4773 39.6146 13.904V14.16C39.6146 14.608 39.6786 15.008 39.8066 15.36C39.9453 15.712 40.132 16.016 40.3666 16.272C40.612 16.5173 40.8946 16.7093 41.2146 16.848C41.5346 16.976 41.8866 17.04 42.2706 17.04ZM64.5204 10.032C64.5204 9.66933 64.4457 9.34933 64.2964 9.072C64.1577 8.79467 63.9657 8.56533 63.7204 8.384C63.475 8.20267 63.1924 8.064 62.8724 7.968C62.5524 7.872 62.2164 7.824 61.8644 7.824C61.555 7.824 61.2617 7.86667 60.9844 7.952C60.707 8.02667 60.4564 8.13867 60.2324 8.288C60.019 8.43733 59.8484 8.624 59.7204 8.848C59.5924 9.06133 59.5284 9.312 59.5284 9.6V9.696C59.5284 10.0053 59.5924 10.272 59.7204 10.496C59.8484 10.7093 60.035 10.896 60.2804 11.056C60.5364 11.2053 60.851 11.3333 61.2244 11.44C61.5977 11.536 62.035 11.6213 62.5364 11.696C63.7097 11.8773 64.5737 12.224 65.1284 12.736C65.683 13.2373 65.9604 13.9147 65.9604 14.768V14.96C65.9604 15.44 65.875 15.8827 65.7044 16.288C65.5444 16.6827 65.299 17.024 64.9684 17.312C64.6484 17.6 64.2484 17.824 63.7684 17.984C63.2884 18.144 62.7337 18.224 62.1044 18.224C61.3897 18.224 60.755 18.1227 60.2004 17.92C59.6564 17.7067 59.1977 17.4187 58.8244 17.056C58.4617 16.6827 58.1844 16.2507 57.9924 15.76C57.8004 15.2587 57.7044 14.7147 57.7044 14.128V13.648H59.0484V14.032C59.0484 15.0133 59.315 15.7493 59.8484 16.24C60.3924 16.7307 61.1444 16.976 62.1044 16.976C62.9364 16.976 63.5604 16.7947 63.9764 16.432C64.403 16.0587 64.6164 15.568 64.6164 14.96V14.864C64.6164 14.2773 64.3977 13.8293 63.9604 13.52C63.5337 13.2107 62.835 12.9867 61.8644 12.848C61.299 12.7733 60.787 12.6613 60.3284 12.512C59.8804 12.352 59.4964 12.1493 59.1764 11.904C58.8564 11.648 58.611 11.344 58.4404 10.992C58.2697 10.64 58.1844 10.224 58.1844 9.744V9.552C58.1844 9.11467 58.275 8.71467 58.4564 8.352C58.6377 7.98933 58.8884 7.67467 59.2084 7.408C59.539 7.14133 59.9284 6.93867 60.3764 6.8C60.835 6.65067 61.3364 6.576 61.8804 6.576C62.5097 6.576 63.0697 6.66667 63.5604 6.848C64.0617 7.02933 64.483 7.27467 64.8244 7.584C65.1657 7.88267 65.4217 8.24 65.5924 8.656C65.7737 9.06133 65.8644 9.488 65.8644 9.936V10.608H64.5204V10.032ZM70.6373 7.696C70.6373 7.38667 70.7439 7.12533 70.9573 6.912C71.1813 6.688 71.4479 6.576 71.7573 6.576C72.0666 6.576 72.3279 6.688 72.5413 6.912C72.7653 7.12533 72.8773 7.38667 72.8773 7.696C72.8773 8.00533 72.7653 8.272 72.5413 8.496C72.3279 8.70933 72.0666 8.816 71.7573 8.816C71.4479 8.816 71.1813 8.70933 70.9573 8.496C70.7439 8.272 70.6373 8.00533 70.6373 7.696ZM68.3653 16.848H71.1493V11.216H68.6533V10.064H72.3973V16.848H74.9893V18H68.3653V16.848ZM84.9461 16.848V18H78.0341V16.016L83.6981 11.408V11.216H78.1301V10.064H84.7541V11.984L79.0581 16.656V16.848H84.9461ZM88.679 14.416C88.711 15.2053 88.9563 15.84 89.415 16.32C89.8737 16.8 90.5137 17.04 91.335 17.04C91.7083 17.04 92.0337 16.9973 92.311 16.912C92.5883 16.8267 92.823 16.7093 93.015 16.56C93.2177 16.4107 93.3777 16.24 93.495 16.048C93.623 15.8453 93.7243 15.632 93.799 15.408L94.983 15.728C94.759 16.464 94.343 17.0667 93.735 17.536C93.1377 17.9947 92.327 18.224 91.303 18.224C90.7377 18.224 90.215 18.128 89.735 17.936C89.2657 17.7333 88.8603 17.4507 88.519 17.088C88.1777 16.7253 87.911 16.2933 87.719 15.792C87.527 15.2907 87.431 14.736 87.431 14.128V13.744C87.431 13.1893 87.527 12.672 87.719 12.192C87.9217 11.712 88.199 11.3013 88.551 10.96C88.903 10.608 89.3137 10.336 89.783 10.144C90.263 9.94133 90.7803 9.84 91.335 9.84C91.9857 9.84 92.5457 9.96267 93.015 10.208C93.495 10.4427 93.8843 10.736 94.183 11.088C94.4923 11.44 94.7163 11.824 94.855 12.24C95.0043 12.656 95.079 13.04 95.079 13.392V14.416H88.679ZM91.335 11.024C90.983 11.024 90.6523 11.0827 90.343 11.2C90.0443 11.3067 89.7777 11.4613 89.543 11.664C89.319 11.8667 89.1323 12.1067 88.983 12.384C88.8443 12.6507 88.7537 12.944 88.711 13.264H93.831C93.8097 12.9227 93.7243 12.6133 93.575 12.336C93.4363 12.0587 93.2497 11.824 93.015 11.632C92.791 11.44 92.5297 11.2907 92.231 11.184C91.943 11.0773 91.6443 11.024 91.335 11.024Z" fill="#BDBDBD"/>

                <g id="threeButtonGRIDSIZE" onClick={(e) => {setNumOfBoxes(3)}} role="button">
                  <path d="M123 14.5C123 6.49187 129.492 0 137.5 0H179V29H137.5C129.492 29 123 22.5081 123 14.5V14.5Z" fill={numOfBoxes === 3 ? "#FFFFFF" : "#D9D9D9"} fill-opacity={numOfBoxes === 3 ? "1.00" : "0.26"}/>
                  <path d="M150.032 13.128V11.504L153.224 9.46V9.292H147.68V8.2H154.232V9.992L151.04 12.036V12.204H151.6C151.973 12.204 152.333 12.2647 152.678 12.386C153.023 12.5073 153.327 12.6847 153.588 12.918C153.859 13.1513 154.073 13.4407 154.232 13.786C154.4 14.122 154.484 14.514 154.484 14.962V15.214C154.484 15.634 154.4 16.026 154.232 16.39C154.064 16.754 153.831 17.0713 153.532 17.342C153.233 17.6033 152.879 17.8133 152.468 17.972C152.067 18.1213 151.628 18.196 151.152 18.196C150.601 18.196 150.107 18.112 149.668 17.944C149.229 17.776 148.856 17.5473 148.548 17.258C148.24 16.9593 148.002 16.614 147.834 16.222C147.675 15.8207 147.596 15.396 147.596 14.948V14.192H148.772V14.864C148.772 15.2187 148.828 15.536 148.94 15.816C149.061 16.0867 149.225 16.32 149.43 16.516C149.645 16.7027 149.897 16.8473 150.186 16.95C150.475 17.0527 150.788 17.104 151.124 17.104C151.432 17.104 151.717 17.0527 151.978 16.95C152.249 16.8473 152.482 16.7073 152.678 16.53C152.874 16.3433 153.028 16.1287 153.14 15.886C153.252 15.634 153.308 15.368 153.308 15.088V15.004C153.308 14.416 153.121 13.9587 152.748 13.632C152.375 13.296 151.908 13.128 151.348 13.128H150.032Z" fill={numOfBoxes === 3 ? "#121212" :"#EAEAEA"} />
                </g>

                <g id="sixButtonGRIDSIZE" onClick={(e) => {setNumOfBoxes(6)}} role="button">
                  <path d="M179 0H235V29H179V0Z" fill={numOfBoxes === 6 ? "#FFFFFF" : "#D9D9D9"} fill-opacity={numOfBoxes === 6 ? "1.00" : "0.26"} />
                  <path d="M209.056 11.056C209.056 10.4493 208.869 9.964 208.496 9.6C208.123 9.22667 207.605 9.04 206.942 9.04C206.625 9.04 206.331 9.096 206.06 9.208C205.799 9.32 205.57 9.48333 205.374 9.698C205.187 9.90333 205.038 10.1507 204.926 10.44C204.823 10.7293 204.772 11.0467 204.772 11.392V12.848H204.94C205.164 12.4373 205.481 12.1153 205.892 11.882C206.312 11.6487 206.779 11.532 207.292 11.532C207.74 11.532 208.155 11.6067 208.538 11.756C208.921 11.896 209.247 12.106 209.518 12.386C209.798 12.666 210.013 13.0067 210.162 13.408C210.321 13.8 210.4 14.248 210.4 14.752V14.92C210.4 15.4053 210.311 15.8487 210.134 16.25C209.966 16.6513 209.728 16.9967 209.42 17.286C209.121 17.5753 208.762 17.7993 208.342 17.958C207.931 18.1167 207.483 18.196 206.998 18.196C206.513 18.196 206.06 18.1167 205.64 17.958C205.229 17.7993 204.87 17.58 204.562 17.3C204.263 17.0107 204.025 16.67 203.848 16.278C203.68 15.8767 203.596 15.438 203.596 14.962V11.392C203.596 10.8787 203.685 10.412 203.862 9.992C204.039 9.572 204.282 9.21733 204.59 8.928C204.898 8.62933 205.253 8.40067 205.654 8.242C206.065 8.08333 206.503 8.004 206.97 8.004C207.437 8.004 207.871 8.074 208.272 8.214C208.673 8.354 209.019 8.55933 209.308 8.83C209.597 9.09133 209.821 9.41333 209.98 9.796C210.148 10.1693 210.232 10.5893 210.232 11.056H209.056ZM206.998 17.16C207.334 17.16 207.637 17.1087 207.908 17.006C208.188 16.894 208.426 16.74 208.622 16.544C208.818 16.348 208.967 16.1147 209.07 15.844C209.173 15.5733 209.224 15.2747 209.224 14.948V14.78C209.224 14.4533 209.168 14.1547 209.056 13.884C208.944 13.6133 208.79 13.38 208.594 13.184C208.398 12.988 208.16 12.8387 207.88 12.736C207.609 12.624 207.315 12.568 206.998 12.568C206.681 12.568 206.387 12.624 206.116 12.736C205.845 12.848 205.607 13.002 205.402 13.198C205.206 13.394 205.052 13.6227 204.94 13.884C204.828 14.1453 204.772 14.4253 204.772 14.724V14.99C204.772 15.298 204.823 15.5873 204.926 15.858C205.029 16.1193 205.178 16.348 205.374 16.544C205.57 16.74 205.803 16.894 206.074 17.006C206.354 17.1087 206.662 17.16 206.998 17.16Z" fill={numOfBoxes === 6 ? "#121212" :"#EAEAEA"}/>
                </g>
                
                <g id="nineButtonGRIDSIZE" onClick={(e) => {setNumOfBoxes(9)}} role="button">
                  <path d="M235 0H291V29H235V0Z" fill={numOfBoxes === 9 ? "#FFFFFF" : "#D9D9D9"} fill-opacity={numOfBoxes === 9 ? "1.00" : "0.26"}/>
                  <path d="M260.44 15.144C260.44 15.7507 260.627 16.2407 261 16.614C261.373 16.978 261.891 17.16 262.554 17.16C262.871 17.16 263.161 17.104 263.422 16.992C263.693 16.88 263.921 16.7213 264.108 16.516C264.304 16.3013 264.453 16.054 264.556 15.774C264.668 15.4847 264.724 15.1627 264.724 14.808V13.352H264.556C264.341 13.7627 264.033 14.0847 263.632 14.318C263.231 14.5513 262.764 14.668 262.232 14.668C261.775 14.668 261.355 14.598 260.972 14.458C260.589 14.318 260.258 14.1127 259.978 13.842C259.698 13.562 259.479 13.226 259.32 12.834C259.171 12.442 259.096 11.994 259.096 11.49V11.322C259.096 10.8367 259.18 10.3933 259.348 9.992C259.516 9.58133 259.749 9.23133 260.048 8.942C260.356 8.64333 260.715 8.41467 261.126 8.256C261.546 8.088 262.003 8.004 262.498 8.004C262.993 8.004 263.445 8.088 263.856 8.256C264.276 8.41467 264.635 8.63867 264.934 8.928C265.242 9.21733 265.48 9.56267 265.648 9.964C265.816 10.3653 265.9 10.804 265.9 11.28V14.808C265.9 15.3307 265.811 15.802 265.634 16.222C265.466 16.6327 265.228 16.9873 264.92 17.286C264.621 17.5753 264.267 17.7993 263.856 17.958C263.445 18.1167 263.002 18.196 262.526 18.196C262.05 18.196 261.611 18.126 261.21 17.986C260.809 17.846 260.463 17.6453 260.174 17.384C259.885 17.1133 259.661 16.7913 259.502 16.418C259.343 16.0353 259.264 15.6107 259.264 15.144H260.44ZM262.498 9.04C262.162 9.04 261.854 9.096 261.574 9.208C261.303 9.32 261.07 9.47867 260.874 9.684C260.678 9.88933 260.529 10.132 260.426 10.412C260.323 10.6827 260.272 10.9767 260.272 11.294V11.462C260.272 11.7887 260.328 12.0873 260.44 12.358C260.552 12.6193 260.706 12.848 260.902 13.044C261.098 13.2307 261.331 13.3753 261.602 13.478C261.873 13.5807 262.171 13.632 262.498 13.632C262.815 13.632 263.109 13.5807 263.38 13.478C263.651 13.366 263.884 13.2167 264.08 13.03C264.285 12.8433 264.444 12.6193 264.556 12.358C264.668 12.0967 264.724 11.8167 264.724 11.518V11.252C264.724 10.944 264.673 10.6547 264.57 10.384C264.467 10.1133 264.318 9.88 264.122 9.684C263.926 9.47867 263.688 9.32 263.408 9.208C263.137 9.096 262.834 9.04 262.498 9.04Z" fill={numOfBoxes === 9 ? "#121212" :"#EAEAEA"}/>
                </g>

                <g id="twelveButtonGRIDSIZE" onClick={(e) => {setNumOfBoxes(12)}} role="button">
                  <path d="M291 0H332.5C340.508 0 347 6.49187 347 14.5V14.5C347 22.5081 340.508 29 332.5 29H291V0Z" fill={numOfBoxes === 12 ? "#FFFFFF" : "#D9D9D9"} fill-opacity={numOfBoxes === 12 ? "1.00" : "0.26"}/>
                  <path d="M313.694 16.908V8.718H313.526L311.916 12.4H310.754V12.316L312.588 8.2H314.87V16.908H317.642V18H310.922V16.908H313.694ZM326.116 16.908V18H319.48V16.32C319.48 15.872 319.555 15.4847 319.704 15.158C319.853 14.822 320.063 14.5373 320.334 14.304C320.614 14.0613 320.95 13.8607 321.342 13.702C321.734 13.5433 322.177 13.408 322.672 13.296C323.503 13.1093 324.1 12.8433 324.464 12.498C324.837 12.1527 325.024 11.728 325.024 11.224V11.14C325.024 10.888 324.982 10.6407 324.898 10.398C324.814 10.1553 324.683 9.936 324.506 9.74C324.329 9.544 324.1 9.39 323.82 9.278C323.549 9.15667 323.223 9.096 322.84 9.096C322.121 9.096 321.561 9.31533 321.16 9.754C320.768 10.1927 320.572 10.776 320.572 11.504V12.12H319.396V11.42C319.396 10.972 319.471 10.5427 319.62 10.132C319.769 9.72133 319.989 9.35733 320.278 9.04C320.567 8.72267 320.927 8.47067 321.356 8.284C321.785 8.09733 322.28 8.004 322.84 8.004C323.409 8.004 323.904 8.09267 324.324 8.27C324.744 8.438 325.094 8.66667 325.374 8.956C325.654 9.236 325.859 9.558 325.99 9.922C326.13 10.2767 326.2 10.6407 326.2 11.014V11.266C326.2 12.0127 325.967 12.652 325.5 13.184C325.033 13.7067 324.287 14.08 323.26 14.304C322.364 14.5 321.706 14.7613 321.286 15.088C320.866 15.4053 320.656 15.872 320.656 16.488V16.908H326.116Z" fill={numOfBoxes === 12 ? "#121212" :"#EAEAEA"}/>
                </g>
              </g>



              <g id="headerANTIBLOCK">
                <path d="M15.296 63.216H10.496L9.68 66H8.24L11.632 54.8H14.16L17.552 66H16.112L15.296 63.216ZM12.8 55.376L10.864 61.968H14.928L12.992 55.376H12.8ZM20.4369 66H19.1889V58.064H20.4369V59.408H20.6289C21.1195 58.3627 21.9729 57.84 23.1889 57.84C24.1062 57.84 24.8369 58.128 25.3809 58.704C25.9249 59.2693 26.1969 60.1227 26.1969 61.264V66H24.9489V61.52C24.9489 60.688 24.7622 60.064 24.3889 59.648C24.0155 59.232 23.5089 59.024 22.8689 59.024C22.1115 59.024 21.5142 59.2853 21.0769 59.808C20.6502 60.32 20.4369 61.008 20.4369 61.872V66ZM28.7138 58.064H31.2098V54.8H32.4578V58.064H35.5298V59.216H32.4578V64.368C32.4578 64.688 32.6018 64.848 32.8898 64.848H35.1458V66H32.4418C32.0791 66 31.7804 65.8827 31.5458 65.648C31.3218 65.4133 31.2098 65.1147 31.2098 64.752V59.216H28.7138V58.064ZM41.2466 55.696C41.2466 55.3867 41.3533 55.1253 41.5666 54.912C41.7906 54.688 42.0573 54.576 42.3666 54.576C42.676 54.576 42.9373 54.688 43.1506 54.912C43.3746 55.1253 43.4866 55.3867 43.4866 55.696C43.4866 56.0053 43.3746 56.272 43.1506 56.496C42.9373 56.7093 42.676 56.816 42.3666 56.816C42.0573 56.816 41.7906 56.7093 41.5666 56.496C41.3533 56.272 41.2466 56.0053 41.2466 55.696ZM38.9746 64.848H41.7586V59.216H39.2626V58.064H43.0066V64.848H45.5986V66H38.9746V64.848ZM49.6835 61.264H54.4835V62.416H49.6835V61.264ZM57.8964 64.752H58.8564V56.048H57.8964V54.8H62.4244C62.9577 54.8 63.427 54.8747 63.8324 55.024C64.2484 55.1733 64.595 55.376 64.8724 55.632C65.1604 55.888 65.3737 56.1973 65.5124 56.56C65.6617 56.912 65.7364 57.296 65.7364 57.712V57.904C65.7364 58.2133 65.6884 58.496 65.5924 58.752C65.4964 59.008 65.363 59.2373 65.1924 59.44C65.0217 59.6427 64.819 59.8187 64.5844 59.968C64.3604 60.1067 64.115 60.2133 63.8484 60.288V60.48C64.3817 60.6293 64.8297 60.9173 65.1924 61.344C65.555 61.76 65.7364 62.272 65.7364 62.88V63.072C65.7364 63.488 65.6617 63.8773 65.5124 64.24C65.3737 64.592 65.1604 64.9013 64.8724 65.168C64.595 65.424 64.2484 65.6267 63.8324 65.776C63.427 65.9253 62.9577 66 62.4244 66H57.8964V64.752ZM60.2004 64.752H62.3284C62.9577 64.752 63.4697 64.5973 63.8644 64.288C64.259 63.968 64.4564 63.5307 64.4564 62.976V62.88C64.4564 62.304 64.2697 61.8507 63.8964 61.52C63.523 61.1787 63.0164 61.008 62.3764 61.008H60.2004V64.752ZM60.2004 59.76H62.3764C63.0164 59.76 63.523 59.5947 63.8964 59.264C64.2697 58.9333 64.4564 58.48 64.4564 57.904V57.808C64.4564 57.264 64.259 56.8373 63.8644 56.528C63.4697 56.208 62.9577 56.048 62.3284 56.048H60.2004V59.76ZM68.1733 64.848H71.0533V55.952H68.2693V54.8H72.3013V64.848H75.1813V66H68.1733V64.848ZM85.4581 62.128C85.4581 62.7893 85.3461 63.376 85.1221 63.888C84.9088 64.3893 84.6208 64.816 84.2581 65.168C83.8955 65.5093 83.4688 65.7707 82.9781 65.952C82.4981 66.1333 81.9968 66.224 81.4741 66.224C80.9408 66.224 80.4341 66.1333 79.9541 65.952C79.4741 65.7707 79.0528 65.5093 78.6901 65.168C78.3275 64.816 78.0341 64.3893 77.8101 63.888C77.5968 63.376 77.4901 62.7893 77.4901 62.128V61.936C77.4901 61.2853 77.5968 60.7093 77.8101 60.208C78.0341 59.696 78.3275 59.264 78.6901 58.912C79.0635 58.56 79.4901 58.2933 79.9701 58.112C80.4501 57.9307 80.9515 57.84 81.4741 57.84C81.9968 57.84 82.4981 57.9307 82.9781 58.112C83.4581 58.2933 83.8795 58.56 84.2421 58.912C84.6155 59.264 84.9088 59.696 85.1221 60.208C85.3461 60.7093 85.4581 61.2853 85.4581 61.936V62.128ZM81.4741 65.04C81.8581 65.04 82.2101 64.976 82.5301 64.848C82.8608 64.7093 83.1488 64.512 83.3941 64.256C83.6395 64 83.8315 63.696 83.9701 63.344C84.1088 62.9813 84.1781 62.576 84.1781 62.128V61.936C84.1781 61.5093 84.1088 61.12 83.9701 60.768C83.8315 60.4053 83.6395 60.096 83.3941 59.84C83.1488 59.584 82.8608 59.3867 82.5301 59.248C82.1995 59.0987 81.8475 59.024 81.4741 59.024C81.1008 59.024 80.7488 59.0987 80.4181 59.248C80.0875 59.3867 79.7995 59.584 79.5541 59.84C79.3088 60.096 79.1168 60.4053 78.9781 60.768C78.8395 61.12 78.7701 61.5093 78.7701 61.936V62.128C78.7701 62.576 78.8395 62.9813 78.9781 63.344C79.1168 63.696 79.3088 64 79.5541 64.256C79.7995 64.512 80.0821 64.7093 80.4021 64.848C80.7328 64.976 81.0901 65.04 81.4741 65.04ZM95.191 63.184C95.1057 63.6213 94.9563 64.0267 94.743 64.4C94.5403 64.7733 94.279 65.0987 93.959 65.376C93.639 65.6427 93.2657 65.8507 92.839 66C92.4123 66.1493 91.9377 66.224 91.415 66.224C90.8603 66.224 90.3323 66.1333 89.831 65.952C89.3403 65.7707 88.9083 65.5093 88.535 65.168C88.1617 64.816 87.863 64.3893 87.639 63.888C87.4257 63.3867 87.319 62.8107 87.319 62.16V61.968C87.319 61.328 87.4257 60.752 87.639 60.24C87.863 59.728 88.1617 59.296 88.535 58.944C88.9083 58.592 89.3403 58.32 89.831 58.128C90.3323 57.936 90.8603 57.84 91.415 57.84C91.9163 57.84 92.3803 57.9147 92.807 58.064C93.2337 58.2133 93.607 58.4267 93.927 58.704C94.2577 58.9707 94.5243 59.2907 94.727 59.664C94.9403 60.0373 95.0843 60.4427 95.159 60.88L93.911 61.168C93.879 60.8907 93.799 60.624 93.671 60.368C93.5537 60.1013 93.3883 59.872 93.175 59.68C92.9723 59.4773 92.7217 59.3173 92.423 59.2C92.1243 59.0827 91.7777 59.024 91.383 59.024C90.999 59.024 90.6363 59.0987 90.295 59.248C89.9643 59.3867 89.671 59.5893 89.415 59.856C89.159 60.112 88.9563 60.4213 88.807 60.784C88.6683 61.1467 88.599 61.5413 88.599 61.968V62.16C88.599 62.608 88.6683 63.0133 88.807 63.376C88.9563 63.728 89.159 64.0267 89.415 64.272C89.671 64.5173 89.9697 64.7093 90.311 64.848C90.6523 64.976 91.0203 65.04 91.415 65.04C91.8097 65.04 92.151 64.9813 92.439 64.864C92.7377 64.736 92.9883 64.576 93.191 64.384C93.4043 64.1813 93.5697 63.952 93.687 63.696C93.815 63.44 93.9003 63.1733 93.943 62.896L95.191 63.184ZM99.6119 61.36H99.8839L102.908 58.064H104.444V58.16L101.148 61.792V62.08L104.828 65.904V66H103.292L99.9159 62.512H99.6119V66H98.3639V54.8H99.6119V61.36Z" fill="#BDBDBD"/>
              
                <g id="offButtonANTIBLOCK" onClick={() => {setTetri(0)}} role="button">
                  <path d="M123 59.5C123 51.4919 129.492 45 137.5 45H179V74H137.5C129.492 74 123 67.5081 123 59.5V59.5Z" fill={tetri === 0 ? "#FFFFFF" : "#D9D9D9"} fill-opacity={tetri === 0 ? "1.00" : "0.26"}/>
                  <path d="M138.982 57.008C138.982 55.7387 139.285 54.754 139.892 54.054C140.498 53.354 141.343 53.004 142.426 53.004C143.508 53.004 144.353 53.354 144.96 54.054C145.566 54.754 145.87 55.7387 145.87 57.008V59.192C145.87 60.4987 145.566 61.4927 144.96 62.174C144.353 62.8553 143.508 63.196 142.426 63.196C141.343 63.196 140.498 62.8553 139.892 62.174C139.285 61.4927 138.982 60.4987 138.982 59.192V57.008ZM142.426 62.104C143.182 62.104 143.746 61.8473 144.12 61.334C144.502 60.8113 144.694 60.0693 144.694 59.108V57.092C144.694 56.196 144.502 55.4727 144.12 54.922C143.746 54.3713 143.182 54.096 142.426 54.096C141.67 54.096 141.1 54.3713 140.718 54.922C140.344 55.4727 140.158 56.196 140.158 57.092V59.108C140.158 60.0693 140.344 60.8113 140.718 61.334C141.1 61.8473 141.67 62.104 142.426 62.104ZM147.862 56.056H150.004V54.292C150.004 53.9747 150.102 53.7133 150.298 53.508C150.503 53.3027 150.765 53.2 151.082 53.2H153.826V54.208H151.474C151.222 54.208 151.096 54.348 151.096 54.628V56.056H153.994V57.064H151.096V63H150.004V57.064H147.862V56.056ZM156.434 56.056H158.576V54.292C158.576 53.9747 158.674 53.7133 158.87 53.508C159.075 53.3027 159.337 53.2 159.654 53.2H162.398V54.208H160.046C159.794 54.208 159.668 54.348 159.668 54.628V56.056H162.566V57.064H159.668V63H158.576V57.064H156.434V56.056Z" fill={tetri === 0 ? "#121212" :"#EAEAEA"}/>
                </g>

                <g id="lowButtonANTIBLOCK" onClick={() => {setTetri(1)}} role="button">
                  <path d="M179 45H235V74H179V45Z" fill={tetri === 1 ? "#FFFFFF" : "#D9D9D9"} fill-opacity={tetri === 1 ? "1.00" : "0.26"}/>
                  <path d="M195.36 53.2H196.536V61.908H201.66V63H195.36V53.2ZM210.484 59.612C210.484 60.1907 210.386 60.704 210.19 61.152C210.003 61.5907 209.751 61.964 209.434 62.272C209.117 62.5707 208.743 62.7993 208.314 62.958C207.894 63.1167 207.455 63.196 206.998 63.196C206.531 63.196 206.088 63.1167 205.668 62.958C205.248 62.7993 204.879 62.5707 204.562 62.272C204.245 61.964 203.988 61.5907 203.792 61.152C203.605 60.704 203.512 60.1907 203.512 59.612V59.444C203.512 58.8747 203.605 58.3707 203.792 57.932C203.988 57.484 204.245 57.106 204.562 56.798C204.889 56.49 205.262 56.2567 205.682 56.098C206.102 55.9393 206.541 55.86 206.998 55.86C207.455 55.86 207.894 55.9393 208.314 56.098C208.734 56.2567 209.103 56.49 209.42 56.798C209.747 57.106 210.003 57.484 210.19 57.932C210.386 58.3707 210.484 58.8747 210.484 59.444V59.612ZM206.998 62.16C207.334 62.16 207.642 62.104 207.922 61.992C208.211 61.8707 208.463 61.698 208.678 61.474C208.893 61.25 209.061 60.984 209.182 60.676C209.303 60.3587 209.364 60.004 209.364 59.612V59.444C209.364 59.0707 209.303 58.73 209.182 58.422C209.061 58.1047 208.893 57.834 208.678 57.61C208.463 57.386 208.211 57.2133 207.922 57.092C207.633 56.9613 207.325 56.896 206.998 56.896C206.671 56.896 206.363 56.9613 206.074 57.092C205.785 57.2133 205.533 57.386 205.318 57.61C205.103 57.834 204.935 58.1047 204.814 58.422C204.693 58.73 204.632 59.0707 204.632 59.444V59.612C204.632 60.004 204.693 60.3587 204.814 60.676C204.935 60.984 205.103 61.25 205.318 61.474C205.533 61.698 205.78 61.8707 206.06 61.992C206.349 62.104 206.662 62.16 206.998 62.16ZM218.51 63H216.494L215.654 56.56H215.486L214.646 63H212.63L211.538 56.056H212.658L213.582 62.496H213.75L214.562 56.056H216.578L217.39 62.496H217.558L218.482 56.056H219.602L218.51 63Z" fill={tetri === 1 ? "#121212" :"#EAEAEA"}/>
                </g>

                <g id="medButtonANTIBLOCK" onClick={() => {setTetri(2)}} role="button">
                  <path d="M235 45H291V74H235V45Z" fill={tetri === 2 ? "#FFFFFF" : "#D9D9D9"} fill-opacity={tetri === 2 ? "1.00" : "0.26"}/>
                  <path d="M250.286 53.2H252.526L253.842 62.496H254.01L255.326 53.2H257.566V63H256.474V53.704H256.306L254.99 63H252.862L251.546 53.704H251.378V63H250.286V53.2ZM260.23 59.864C260.258 60.5547 260.473 61.11 260.874 61.53C261.275 61.95 261.835 62.16 262.554 62.16C262.881 62.16 263.165 62.1227 263.408 62.048C263.651 61.9733 263.856 61.8707 264.024 61.74C264.201 61.6093 264.341 61.46 264.444 61.292C264.556 61.1147 264.645 60.928 264.71 60.732L265.746 61.012C265.55 61.656 265.186 62.1833 264.654 62.594C264.131 62.9953 263.422 63.196 262.526 63.196C262.031 63.196 261.574 63.112 261.154 62.944C260.743 62.7667 260.389 62.5193 260.09 62.202C259.791 61.8847 259.558 61.5067 259.39 61.068C259.222 60.6293 259.138 60.144 259.138 59.612V59.276C259.138 58.7907 259.222 58.338 259.39 57.918C259.567 57.498 259.81 57.1387 260.118 56.84C260.426 56.532 260.785 56.294 261.196 56.126C261.616 55.9487 262.069 55.86 262.554 55.86C263.123 55.86 263.613 55.9673 264.024 56.182C264.444 56.3873 264.785 56.644 265.046 56.952C265.317 57.26 265.513 57.596 265.634 57.96C265.765 58.324 265.83 58.66 265.83 58.968V59.864H260.23ZM262.554 56.896C262.246 56.896 261.957 56.9473 261.686 57.05C261.425 57.1433 261.191 57.2787 260.986 57.456C260.79 57.6333 260.627 57.8433 260.496 58.086C260.375 58.3193 260.295 58.576 260.258 58.856H264.738C264.719 58.5573 264.645 58.2867 264.514 58.044C264.393 57.8013 264.229 57.596 264.024 57.428C263.828 57.26 263.599 57.1293 263.338 57.036C263.086 56.9427 262.825 56.896 262.554 56.896ZM273.38 61.936H273.212C273.1 62.1507 272.955 62.3373 272.778 62.496C272.61 62.6547 272.423 62.7853 272.218 62.888C272.022 62.9907 271.812 63.0653 271.588 63.112C271.364 63.168 271.149 63.196 270.944 63.196C270.477 63.196 270.043 63.1167 269.642 62.958C269.241 62.7993 268.886 62.5707 268.578 62.272C268.279 61.9733 268.041 61.6047 267.864 61.166C267.696 60.718 267.612 60.2093 267.612 59.64V59.416C267.612 58.856 267.701 58.3567 267.878 57.918C268.055 57.47 268.293 57.0967 268.592 56.798C268.891 56.49 269.241 56.2567 269.642 56.098C270.043 55.9393 270.468 55.86 270.916 55.86C271.392 55.86 271.835 55.9673 272.246 56.182C272.666 56.3873 272.988 56.7093 273.212 57.148H273.38V53.2H274.472V63H273.38V61.936ZM271.056 62.16C271.383 62.16 271.686 62.0993 271.966 61.978C272.246 61.8567 272.489 61.684 272.694 61.46C272.909 61.236 273.077 60.97 273.198 60.662C273.319 60.3447 273.38 59.9947 273.38 59.612V59.444C273.38 59.0707 273.319 58.73 273.198 58.422C273.077 58.1047 272.909 57.834 272.694 57.61C272.489 57.386 272.241 57.2133 271.952 57.092C271.672 56.9613 271.373 56.896 271.056 56.896C270.729 56.896 270.421 56.9567 270.132 57.078C269.852 57.1993 269.605 57.372 269.39 57.596C269.185 57.82 269.021 58.086 268.9 58.394C268.788 58.702 268.732 59.0427 268.732 59.416V59.64C268.732 60.032 268.788 60.382 268.9 60.69C269.021 60.998 269.185 61.264 269.39 61.488C269.605 61.7027 269.852 61.8707 270.132 61.992C270.412 62.104 270.72 62.16 271.056 62.16Z" fill={tetri === 2 ? "#121212" :"#EAEAEA"}/>
                </g>

                <g id="highButtonANTIBLOCK" onClick={() => {setTetri(3)}} role="button">
                  <path d="M291 45H332.5C340.508 45 347 51.4919 347 59.5V59.5C347 67.5081 340.508 74 332.5 74H291V45Z" fill={tetri === 3 ? "#FFFFFF" : "#D9D9D9"} fill-opacity={tetri === 3 ? "1.00" : "0.26"}/>
                  <path d="M302.377 53.2H303.553V57.54H307.725V53.2H308.901V63H307.725V58.632H303.553V63H302.377V53.2ZM313.302 53.984C313.302 53.7133 313.395 53.4847 313.582 53.298C313.778 53.102 314.011 53.004 314.282 53.004C314.552 53.004 314.781 53.102 314.968 53.298C315.164 53.4847 315.262 53.7133 315.262 53.984C315.262 54.2547 315.164 54.488 314.968 54.684C314.781 54.8707 314.552 54.964 314.282 54.964C314.011 54.964 313.778 54.8707 313.582 54.684C313.395 54.488 313.302 54.2547 313.302 53.984ZM311.314 61.992H313.75V57.064H311.566V56.056H314.842V61.992H317.11V63H311.314V61.992ZM324.996 61.936H324.828C324.604 62.356 324.296 62.6733 323.904 62.888C323.521 63.0933 323.101 63.196 322.644 63.196C322.177 63.196 321.739 63.1167 321.328 62.958C320.917 62.7993 320.553 62.5707 320.236 62.272C319.928 61.9733 319.681 61.6047 319.494 61.166C319.317 60.718 319.228 60.2093 319.228 59.64V59.416C319.228 58.856 319.321 58.3567 319.508 57.918C319.695 57.47 319.942 57.0967 320.25 56.798C320.558 56.49 320.917 56.2567 321.328 56.098C321.739 55.9393 322.168 55.86 322.616 55.86C323.12 55.86 323.559 55.972 323.932 56.196C324.315 56.4107 324.613 56.728 324.828 57.148H324.996V56.056H326.088V64.708C326.088 65.0253 325.985 65.2867 325.78 65.492C325.584 65.6973 325.327 65.8 325.01 65.8H320.488V64.792H324.618C324.87 64.792 324.996 64.652 324.996 64.372V61.936ZM322.672 62.16C322.999 62.16 323.302 62.0993 323.582 61.978C323.862 61.8567 324.105 61.684 324.31 61.46C324.525 61.236 324.693 60.97 324.814 60.662C324.935 60.3447 324.996 59.9947 324.996 59.612V59.444C324.996 59.0707 324.935 58.73 324.814 58.422C324.693 58.1047 324.525 57.834 324.31 57.61C324.105 57.386 323.857 57.2133 323.568 57.092C323.288 56.9613 322.989 56.896 322.672 56.896C322.345 56.896 322.037 56.9567 321.748 57.078C321.468 57.1993 321.221 57.372 321.006 57.596C320.801 57.82 320.637 58.086 320.516 58.394C320.404 58.702 320.348 59.0427 320.348 59.416V59.64C320.348 60.032 320.404 60.382 320.516 60.69C320.637 60.998 320.801 61.264 321.006 61.488C321.221 61.7027 321.468 61.8707 321.748 61.992C322.028 62.104 322.336 62.16 322.672 62.16ZM329.382 63H328.29V53.2H329.382V57.316H329.55C329.765 56.868 330.064 56.5133 330.446 56.252C330.838 55.9907 331.314 55.86 331.874 55.86C332.63 55.86 333.242 56.112 333.708 56.616C334.184 57.1107 334.422 57.8573 334.422 58.856V63H333.33V59.08C333.33 58.352 333.167 57.806 332.84 57.442C332.514 57.078 332.07 56.896 331.51 56.896C330.848 56.896 330.325 57.1247 329.942 57.582C329.569 58.03 329.382 58.632 329.382 59.388V63Z" fill={tetri === 3 ? "#121212" :"#EAEAEA"}/>
                </g>
              </g>



              <g id="headerFILL">
                <path d="M9.52 101.8H16.4V103.048H10.864V106.76H16.304V108.008H10.864V113H9.52V101.8ZM21.6529 102.696C21.6529 102.387 21.7595 102.125 21.9729 101.912C22.1969 101.688 22.4635 101.576 22.7729 101.576C23.0822 101.576 23.3435 101.688 23.5569 101.912C23.7809 102.125 23.8929 102.387 23.8929 102.696C23.8929 103.005 23.7809 103.272 23.5569 103.496C23.3435 103.709 23.0822 103.816 22.7729 103.816C22.4635 103.816 22.1969 103.709 21.9729 103.496C21.7595 103.272 21.6529 103.005 21.6529 102.696ZM19.3809 111.848H22.1649V106.216H19.6689V105.064H23.4129V111.848H26.0049V113H19.3809V111.848ZM28.9858 111.848H31.8658V102.952H29.0818V101.8H33.1138V111.848H35.9938V113H28.9858V111.848ZM38.7826 111.848H41.6626V102.952H38.8786V101.8H42.9106V111.848H45.7906V113H38.7826V111.848Z" fill="#BDBDBD"/>
              
                <g id="onButtonFILL" onClick={() => {setNoFill(false)}} role="button">
                <path d="M290 93H331.5C339.508 93 346 99.4919 346 107.5V107.5C346 115.508 339.508 122 331.5 122H290V93Z" fill={!noFill ? "#FFFFFF" : "#D9D9D9"} fill-opacity={!noFill? "1.00" : "0.26"}/>
                  <path d="M307.768 105.008C307.768 103.739 308.071 102.754 308.678 102.054C309.284 101.354 310.129 101.004 311.212 101.004C312.294 101.004 313.139 101.354 313.746 102.054C314.352 102.754 314.656 103.739 314.656 105.008V107.192C314.656 108.499 314.352 109.493 313.746 110.174C313.139 110.855 312.294 111.196 311.212 111.196C310.129 111.196 309.284 110.855 308.678 110.174C308.071 109.493 307.768 108.499 307.768 107.192V105.008ZM311.212 110.104C311.968 110.104 312.532 109.847 312.906 109.334C313.288 108.811 313.48 108.069 313.48 107.108V105.092C313.48 104.196 313.288 103.473 312.906 102.922C312.532 102.371 311.968 102.096 311.212 102.096C310.456 102.096 309.886 102.371 309.504 102.922C309.13 103.473 308.944 104.196 308.944 105.092V107.108C308.944 108.069 309.13 108.811 309.504 109.334C309.886 109.847 310.456 110.104 311.212 110.104ZM317.81 111H316.718V104.056H317.81V105.232H317.978C318.407 104.317 319.154 103.86 320.218 103.86C321.021 103.86 321.66 104.112 322.136 104.616C322.612 105.111 322.85 105.857 322.85 106.856V111H321.758V107.08C321.758 106.352 321.595 105.806 321.268 105.442C320.941 105.078 320.498 104.896 319.938 104.896C319.275 104.896 318.753 105.125 318.37 105.582C317.997 106.03 317.81 106.632 317.81 107.388V111Z" fill={!noFill ? "#121212" :"#EAEAEA"}/>
                  
                </g>

                <g id="offButtonFILL" onClick={() => {setNoFill(true)}} role="button">
                <path d="M234 107.5C234 99.4919 240.492 93 248.5 93H290V122H248.5C240.492 122 234 115.508 234 107.5V107.5Z" fill={noFill ? "#FFFFFF" : "#D9D9D9"} fill-opacity={noFill? "1.00" : "0.26"}/>
                  <path d="M249.982 105.008C249.982 103.739 250.285 102.754 250.892 102.054C251.498 101.354 252.343 101.004 253.426 101.004C254.508 101.004 255.353 101.354 255.96 102.054C256.566 102.754 256.87 103.739 256.87 105.008V107.192C256.87 108.499 256.566 109.493 255.96 110.174C255.353 110.855 254.508 111.196 253.426 111.196C252.343 111.196 251.498 110.855 250.892 110.174C250.285 109.493 249.982 108.499 249.982 107.192V105.008ZM253.426 110.104C254.182 110.104 254.746 109.847 255.12 109.334C255.502 108.811 255.694 108.069 255.694 107.108V105.092C255.694 104.196 255.502 103.473 255.12 102.922C254.746 102.371 254.182 102.096 253.426 102.096C252.67 102.096 252.1 102.371 251.718 102.922C251.344 103.473 251.158 104.196 251.158 105.092V107.108C251.158 108.069 251.344 108.811 251.718 109.334C252.1 109.847 252.67 110.104 253.426 110.104ZM258.862 104.056H261.004V102.292C261.004 101.975 261.102 101.713 261.298 101.508C261.503 101.303 261.765 101.2 262.082 101.2H264.826V102.208H262.474C262.222 102.208 262.096 102.348 262.096 102.628V104.056H264.994V105.064H262.096V111H261.004V105.064H258.862V104.056ZM267.434 104.056H269.576V102.292C269.576 101.975 269.674 101.713 269.87 101.508C270.075 101.303 270.337 101.2 270.654 101.2H273.398V102.208H271.046C270.794 102.208 270.668 102.348 270.668 102.628V104.056H273.566V105.064H270.668V111H269.576V105.064H267.434V104.056Z" fill={noFill ? "#121212" :"#EAEAEA"}/>
                  
                </g>
              </g>


              <g id="headerCRHOMA">
                <path d="M12.6734 158.906C13.132 158.906 13.5214 158.831 13.8414 158.682C14.172 158.522 14.4387 158.314 14.6414 158.058C14.8547 157.791 15.0094 157.493 15.1054 157.162C15.212 156.821 15.2654 156.463 15.2654 156.09V155.898H16.6094V156.09C16.6094 156.655 16.524 157.189 16.3534 157.69C16.1827 158.181 15.932 158.613 15.6014 158.986C15.2707 159.349 14.86 159.637 14.3694 159.85C13.8787 160.053 13.3134 160.154 12.6734 160.154C11.436 160.154 10.4707 159.765 9.77738 158.986C9.08405 158.207 8.73738 157.071 8.73738 155.578V153.082C8.73738 151.631 9.08405 150.506 9.77738 149.706C10.4707 148.906 11.436 148.506 12.6734 148.506C13.3134 148.506 13.8787 148.613 14.3694 148.826C14.86 149.029 15.2707 149.317 15.6014 149.69C15.932 150.053 16.1827 150.485 16.3534 150.986C16.524 151.477 16.6094 152.005 16.6094 152.57V152.762H15.2654V152.57C15.2547 152.207 15.196 151.855 15.0894 151.514C14.9934 151.173 14.8387 150.874 14.6254 150.618C14.4227 150.351 14.1614 150.143 13.8414 149.994C13.5214 149.834 13.132 149.754 12.6734 149.754C11.8094 149.754 11.1587 150.069 10.7214 150.698C10.2947 151.327 10.0814 152.154 10.0814 153.178V155.482C10.0814 156.581 10.2947 157.429 10.7214 158.026C11.1587 158.613 11.8094 158.906 12.6734 158.906ZM20.1503 159.93H18.9023V148.73H20.1503V153.434H20.3423C20.5876 152.922 20.9289 152.517 21.3663 152.218C21.8143 151.919 22.3583 151.77 22.9983 151.77C23.8623 151.77 24.5609 152.058 25.0943 152.634C25.6383 153.199 25.9103 154.053 25.9103 155.194V159.93H24.6623V155.45C24.6623 154.618 24.4756 153.994 24.1023 153.578C23.7289 153.162 23.2223 152.954 22.5823 152.954C21.8249 152.954 21.2276 153.215 20.7903 153.738C20.3636 154.25 20.1503 154.938 20.1503 155.802V159.93ZM28.2511 151.994H31.1311V153.05H31.3231C31.5258 152.613 31.8138 152.293 32.1871 152.09C32.5605 151.877 32.9871 151.77 33.4671 151.77C34.2671 151.77 34.9125 152.031 35.4031 152.554C35.8938 153.077 36.1551 153.839 36.1871 154.842L34.8751 155.034C34.8751 154.298 34.6991 153.77 34.3471 153.45C33.9951 153.119 33.5631 152.954 33.0511 152.954C32.7205 152.954 32.4325 153.018 32.1871 153.146C31.9525 153.274 31.7551 153.45 31.5951 153.674C31.4351 153.898 31.3178 154.159 31.2431 154.458C31.1685 154.757 31.1311 155.077 31.1311 155.418V158.778H33.1471V159.93H28.0591V158.778H29.8831V153.146H28.2511V151.994ZM45.984 156.058C45.984 156.719 45.872 157.306 45.648 157.818C45.4347 158.319 45.1467 158.746 44.784 159.098C44.4213 159.439 43.9947 159.701 43.504 159.882C43.024 160.063 42.5227 160.154 42 160.154C41.4667 160.154 40.96 160.063 40.48 159.882C40 159.701 39.5787 159.439 39.216 159.098C38.8533 158.746 38.56 158.319 38.336 157.818C38.1227 157.306 38.016 156.719 38.016 156.058V155.866C38.016 155.215 38.1227 154.639 38.336 154.138C38.56 153.626 38.8533 153.194 39.216 152.842C39.5893 152.49 40.016 152.223 40.496 152.042C40.976 151.861 41.4773 151.77 42 151.77C42.5227 151.77 43.024 151.861 43.504 152.042C43.984 152.223 44.4053 152.49 44.768 152.842C45.1413 153.194 45.4347 153.626 45.648 154.138C45.872 154.639 45.984 155.215 45.984 155.866V156.058ZM42 158.97C42.384 158.97 42.736 158.906 43.056 158.778C43.3867 158.639 43.6747 158.442 43.92 158.186C44.1653 157.93 44.3573 157.626 44.496 157.274C44.6347 156.911 44.704 156.506 44.704 156.058V155.866C44.704 155.439 44.6347 155.05 44.496 154.698C44.3573 154.335 44.1653 154.026 43.92 153.77C43.6747 153.514 43.3867 153.317 43.056 153.178C42.7253 153.029 42.3733 152.954 42 152.954C41.6267 152.954 41.2747 153.029 40.944 153.178C40.6133 153.317 40.3253 153.514 40.08 153.77C39.8347 154.026 39.6427 154.335 39.504 154.698C39.3653 155.05 39.296 155.439 39.296 155.866V156.058C39.296 156.506 39.3653 156.911 39.504 157.274C39.6427 157.626 39.8347 157.93 40.08 158.186C40.3253 158.442 40.608 158.639 40.928 158.778C41.2587 158.906 41.616 158.97 42 158.97ZM55.9249 159.93H54.6769V154.234C54.6769 153.861 54.5915 153.557 54.4209 153.322C54.2502 153.077 53.9782 152.954 53.6049 152.954C53.2529 152.954 52.9649 153.087 52.7409 153.354C52.5275 153.61 52.4209 154.01 52.4209 154.554V159.93H51.1729V154.17C51.1729 153.818 51.0769 153.53 50.8849 153.306C50.6929 153.071 50.4369 152.954 50.1169 152.954C49.7329 152.954 49.4342 153.093 49.2209 153.37C49.0182 153.647 48.9169 154.01 48.9169 154.458V159.93H47.6689V151.994H48.9169V152.858H49.1089C49.2475 152.485 49.4502 152.213 49.7169 152.042C49.9835 151.861 50.2982 151.77 50.6609 151.77C51.0449 151.77 51.3595 151.871 51.6049 152.074C51.8609 152.277 52.0369 152.538 52.1329 152.858H52.3249C52.6875 152.133 53.2635 151.77 54.0529 151.77C54.6502 151.77 55.1089 151.962 55.4289 152.346C55.7595 152.719 55.9249 153.21 55.9249 153.818V159.93ZM63.8498 158.586H63.6578C63.4018 159.119 63.0444 159.514 62.5858 159.77C62.1378 160.026 61.6631 160.154 61.1618 160.154C60.6391 160.154 60.1538 160.069 59.7058 159.898C59.2578 159.717 58.8631 159.455 58.5218 159.114C58.1911 158.762 57.9298 158.335 57.7378 157.834C57.5458 157.333 57.4498 156.751 57.4498 156.09V155.834C57.4498 155.183 57.5458 154.607 57.7378 154.106C57.9298 153.605 58.1911 153.183 58.5218 152.842C58.8631 152.49 59.2578 152.223 59.7058 152.042C60.1538 151.861 60.6284 151.77 61.1298 151.77C61.6738 151.77 62.1644 151.893 62.6018 152.138C63.0498 152.373 63.4018 152.741 63.6578 153.242H63.8498V151.994H65.0978V158.298C65.0978 158.618 65.2418 158.778 65.5298 158.778H65.9298V159.93H65.0818C64.7191 159.93 64.4204 159.813 64.1858 159.578C63.9618 159.343 63.8498 159.045 63.8498 158.682V158.586ZM61.2898 158.97C61.6631 158.97 62.0044 158.901 62.3138 158.762C62.6338 158.623 62.9058 158.426 63.1298 158.17C63.3538 157.914 63.5298 157.61 63.6578 157.258C63.7858 156.895 63.8498 156.495 63.8498 156.058V155.866C63.8498 155.439 63.7858 155.05 63.6578 154.698C63.5298 154.335 63.3484 154.026 63.1138 153.77C62.8898 153.514 62.6178 153.317 62.2978 153.178C61.9884 153.029 61.6524 152.954 61.2898 152.954C60.9164 152.954 60.5751 153.023 60.2658 153.162C59.9564 153.301 59.6844 153.498 59.4498 153.754C59.2258 153.999 59.0498 154.303 58.9218 154.666C58.7938 155.018 58.7298 155.407 58.7298 155.834V156.09C58.7298 156.997 58.9644 157.706 59.4338 158.218C59.9138 158.719 60.5324 158.97 61.2898 158.97ZM70.2706 159.034C70.2706 158.725 70.3773 158.463 70.5906 158.25C70.8146 158.026 71.0813 157.914 71.3906 157.914C71.7 157.914 71.9613 158.026 72.1746 158.25C72.3986 158.463 72.5106 158.725 72.5106 159.034C72.5106 159.343 72.3986 159.61 72.1746 159.834C71.9613 160.047 71.7 160.154 71.3906 160.154C71.0813 160.154 70.8146 160.047 70.5906 159.834C70.3773 159.61 70.2706 159.343 70.2706 159.034ZM70.2706 152.89C70.2706 152.581 70.3773 152.319 70.5906 152.106C70.8146 151.882 71.0813 151.77 71.3906 151.77C71.7 151.77 71.9613 151.882 72.1746 152.106C72.3986 152.319 72.5106 152.581 72.5106 152.89C72.5106 153.199 72.3986 153.466 72.1746 153.69C71.9613 153.903 71.7 154.01 71.3906 154.01C71.0813 154.01 70.8146 153.903 70.5906 153.69C70.3773 153.466 70.2706 153.199 70.2706 152.89Z" fill="#BDBDBD"/>
                
                <g id="firstColorArea">
                  <path fill={chroma === "Alpine" ? "#A1FFD2" : "transparent"} d="M93.296 157.216H88.496L87.68 160H86.24L89.632 148.8H92.16L95.552 160H94.112L93.296 157.216ZM90.8 149.376L88.864 155.968H92.928L90.992 149.376H90.8ZM97.1889 158.848H100.069V149.952H97.2849V148.8H101.317V158.848H104.197V160H97.1889V158.848ZM107.946 163.2H106.698V152.064H107.946V153.312H108.138C108.415 152.832 108.799 152.469 109.29 152.224C109.78 151.968 110.314 151.84 110.89 151.84C111.38 151.84 111.844 151.931 112.282 152.112C112.719 152.293 113.103 152.555 113.434 152.896C113.775 153.237 114.042 153.659 114.234 154.16C114.436 154.661 114.538 155.232 114.538 155.872V156.192C114.538 156.843 114.442 157.419 114.25 157.92C114.058 158.421 113.791 158.843 113.45 159.184C113.119 159.525 112.73 159.787 112.282 159.968C111.834 160.139 111.359 160.224 110.858 160.224C110.602 160.224 110.34 160.192 110.074 160.128C109.807 160.075 109.551 159.989 109.306 159.872C109.071 159.744 108.852 159.595 108.65 159.424C108.447 159.243 108.276 159.029 108.138 158.784H107.946V163.2ZM110.602 159.04C110.986 159.04 111.338 158.976 111.658 158.848C111.978 158.709 112.255 158.517 112.49 158.272C112.735 158.027 112.922 157.728 113.05 157.376C113.188 157.024 113.258 156.629 113.258 156.192V155.872C113.258 155.445 113.188 155.061 113.05 154.72C112.922 154.368 112.735 154.069 112.49 153.824C112.255 153.568 111.972 153.371 111.642 153.232C111.322 153.093 110.975 153.024 110.602 153.024C110.228 153.024 109.882 153.099 109.562 153.248C109.242 153.387 108.959 153.584 108.714 153.84C108.479 154.096 108.292 154.405 108.154 154.768C108.015 155.12 107.946 155.509 107.946 155.936V156.128C107.946 156.565 108.015 156.965 108.154 157.328C108.292 157.68 108.479 157.984 108.714 158.24C108.959 158.496 109.242 158.693 109.562 158.832C109.882 158.971 110.228 159.04 110.602 159.04ZM119.247 149.696C119.247 149.387 119.353 149.125 119.567 148.912C119.791 148.688 120.057 148.576 120.367 148.576C120.676 148.576 120.937 148.688 121.151 148.912C121.375 149.125 121.487 149.387 121.487 149.696C121.487 150.005 121.375 150.272 121.151 150.496C120.937 150.709 120.676 150.816 120.367 150.816C120.057 150.816 119.791 150.709 119.567 150.496C119.353 150.272 119.247 150.005 119.247 149.696ZM116.975 158.848H119.759V153.216H117.263V152.064H121.007V158.848H123.599V160H116.975V158.848ZM127.828 160H126.58V152.064H127.828V153.408H128.02C128.51 152.363 129.364 151.84 130.58 151.84C131.497 151.84 132.228 152.128 132.772 152.704C133.316 153.269 133.588 154.123 133.588 155.264V160H132.34V155.52C132.34 154.688 132.153 154.064 131.78 153.648C131.406 153.232 130.9 153.024 130.26 153.024C129.502 153.024 128.905 153.285 128.468 153.808C128.041 154.32 127.828 155.008 127.828 155.872V160ZM137.288 156.416C137.32 157.205 137.566 157.84 138.024 158.32C138.483 158.8 139.123 159.04 139.944 159.04C140.318 159.04 140.643 158.997 140.92 158.912C141.198 158.827 141.432 158.709 141.624 158.56C141.827 158.411 141.987 158.24 142.104 158.048C142.232 157.845 142.334 157.632 142.408 157.408L143.592 157.728C143.368 158.464 142.952 159.067 142.344 159.536C141.747 159.995 140.936 160.224 139.912 160.224C139.347 160.224 138.824 160.128 138.344 159.936C137.875 159.733 137.47 159.451 137.128 159.088C136.787 158.725 136.52 158.293 136.328 157.792C136.136 157.291 136.04 156.736 136.04 156.128V155.744C136.04 155.189 136.136 154.672 136.328 154.192C136.531 153.712 136.808 153.301 137.16 152.96C137.512 152.608 137.923 152.336 138.392 152.144C138.872 151.941 139.39 151.84 139.944 151.84C140.595 151.84 141.155 151.963 141.624 152.208C142.104 152.443 142.494 152.736 142.792 153.088C143.102 153.44 143.326 153.824 143.464 154.24C143.614 154.656 143.688 155.04 143.688 155.392V156.416H137.288ZM139.944 153.024C139.592 153.024 139.262 153.083 138.952 153.2C138.654 153.307 138.387 153.461 138.152 153.664C137.928 153.867 137.742 154.107 137.592 154.384C137.454 154.651 137.363 154.944 137.32 155.264H142.44C142.419 154.923 142.334 154.613 142.184 154.336C142.046 154.059 141.859 153.824 141.624 153.632C141.4 153.44 141.139 153.291 140.84 153.184C140.552 153.077 140.254 153.024 139.944 153.024Z"/>
                  
                  <g id="firstColorButtonChroma" onClick={() => {setChroma("Alpine")}} role="button">
                    <rect x="181.315" y="141.328" width="27.4459" height="27.4459" rx="13.7229" fill="#D9D9D9" fill-opacity="0.09" stroke="#A1FFD2"/>
                    <rect x="187.927" y="147.94" width="14.2229" height="14.2229" rx="7.11146" fill={chroma === "Alpine" ? "#A1FFD2" : "transparent"} stroke={chroma === "Alpine" ? "#A1FFD2" : "transparent"} />
                  </g>
                </g>

                <g id="secondColorArea">
                  <path fill={chroma === "Tidal" ? "#59FFFF" : "transparent"} d="M86.96 148.8H94.832V150.048H91.568V160H90.224V150.048H86.96V148.8ZM99.6529 149.696C99.6529 149.387 99.7595 149.125 99.9729 148.912C100.197 148.688 100.464 148.576 100.773 148.576C101.082 148.576 101.344 148.688 101.557 148.912C101.781 149.125 101.893 149.387 101.893 149.696C101.893 150.005 101.781 150.272 101.557 150.496C101.344 150.709 101.082 150.816 100.773 150.816C100.464 150.816 100.197 150.709 99.9729 150.496C99.7595 150.272 99.6529 150.005 99.6529 149.696ZM97.3809 158.848H100.165V153.216H97.6689V152.064H101.413V158.848H104.005V160H97.3809V158.848ZM113.13 158.784H112.938C112.81 159.029 112.644 159.243 112.442 159.424C112.25 159.605 112.036 159.755 111.802 159.872C111.578 159.989 111.338 160.075 111.082 160.128C110.826 160.192 110.58 160.224 110.346 160.224C109.812 160.224 109.316 160.133 108.858 159.952C108.399 159.771 107.994 159.509 107.642 159.168C107.3 158.827 107.028 158.405 106.826 157.904C106.634 157.392 106.538 156.811 106.538 156.16V155.904C106.538 155.264 106.639 154.693 106.842 154.192C107.044 153.68 107.316 153.253 107.658 152.912C107.999 152.56 108.399 152.293 108.858 152.112C109.316 151.931 109.802 151.84 110.314 151.84C110.858 151.84 111.364 151.963 111.834 152.208C112.314 152.443 112.682 152.811 112.938 153.312H113.13V148.8H114.378V160H113.13V158.784ZM110.474 159.04C110.847 159.04 111.194 158.971 111.514 158.832C111.834 158.693 112.111 158.496 112.346 158.24C112.591 157.984 112.783 157.68 112.922 157.328C113.06 156.965 113.13 156.565 113.13 156.128V155.936C113.13 155.509 113.06 155.12 112.922 154.768C112.783 154.405 112.591 154.096 112.346 153.84C112.111 153.584 111.828 153.387 111.498 153.248C111.178 153.099 110.836 153.024 110.474 153.024C110.1 153.024 109.748 153.093 109.418 153.232C109.098 153.371 108.815 153.568 108.57 153.824C108.335 154.08 108.148 154.384 108.01 154.736C107.882 155.088 107.818 155.477 107.818 155.904V156.16C107.818 156.608 107.882 157.008 108.01 157.36C108.148 157.712 108.335 158.016 108.57 158.272C108.815 158.517 109.098 158.709 109.418 158.848C109.738 158.976 110.09 159.04 110.474 159.04ZM122.543 158.656H122.351C122.095 159.189 121.737 159.584 121.279 159.84C120.831 160.096 120.356 160.224 119.855 160.224C119.332 160.224 118.847 160.139 118.399 159.968C117.951 159.787 117.556 159.525 117.215 159.184C116.884 158.832 116.623 158.405 116.431 157.904C116.239 157.403 116.143 156.821 116.143 156.16V155.904C116.143 155.253 116.239 154.677 116.431 154.176C116.623 153.675 116.884 153.253 117.215 152.912C117.556 152.56 117.951 152.293 118.399 152.112C118.847 151.931 119.321 151.84 119.823 151.84C120.367 151.84 120.857 151.963 121.295 152.208C121.743 152.443 122.095 152.811 122.351 153.312H122.543V152.064H123.791V158.368C123.791 158.688 123.935 158.848 124.223 158.848H124.623V160H123.775C123.412 160 123.113 159.883 122.879 159.648C122.655 159.413 122.543 159.115 122.543 158.752V158.656ZM119.983 159.04C120.356 159.04 120.697 158.971 121.007 158.832C121.327 158.693 121.599 158.496 121.823 158.24C122.047 157.984 122.223 157.68 122.351 157.328C122.479 156.965 122.543 156.565 122.543 156.128V155.936C122.543 155.509 122.479 155.12 122.351 154.768C122.223 154.405 122.041 154.096 121.807 153.84C121.583 153.584 121.311 153.387 120.991 153.248C120.681 153.099 120.345 153.024 119.983 153.024C119.609 153.024 119.268 153.093 118.959 153.232C118.649 153.371 118.377 153.568 118.143 153.824C117.919 154.069 117.743 154.373 117.615 154.736C117.487 155.088 117.423 155.477 117.423 155.904V156.16C117.423 157.067 117.657 157.776 118.127 158.288C118.607 158.789 119.225 159.04 119.983 159.04ZM126.58 158.848H129.46V149.952H126.676V148.8H130.708V158.848H133.588V160H126.58V158.848Z"/>
                  
                  <g id="secondColorButtonCHROMA" onClick={() => {setChroma("Tidal")}} role="button">
                    <rect x="222.086" y="141.328" width="27.4459" height="27.4459" rx="13.7229" fill="#D9D9D9" fill-opacity="0.09" stroke="#59FFFF"/>
                    <rect x="228.5" y="147.94" width="14.2229" height="14.2229" rx="7.11146" fill={chroma === "Tidal" ? "#59FFFF" : "transparent"} stroke={chroma === "Tidal" ? "#59FFFF" : "transparent"}/>
                  </g>
                </g>
              </g>

              <defs>
                <linearGradient id="paint0_linear_82_803" x1="49.1828" y1="173.233" x2="198.771" y2="289.292" gradientUnits="userSpaceOnUse">
                  <stop stop-color="#ADFFD8"/>
                  <stop offset="1" stop-color="#74FFB9"/>
                </linearGradient>
              </defs>
            </svg>




            

            





            </div>

                 
            <button className="w-[10%] flex" onClick={(e) => {
                if((blocks.indexOf(selectedSeed) + 1) === blocks.length)
                {
                  setSeed(blocks[0])
                }
                else
                {
                setSeed(blocks[(blocks.indexOf(selectedSeed) + 1)])
                }
              }}>
              
            </button>




            
          </div>

          <span className="block mt-8"></span>

          <div className="w-[100%]">
            <span className="block mt-8"></span>
          </div>
        </div>
      </div>

      <div className="lg:w-6/12 md:w-[90%] sm:w-[90%]  pt-4 lg:pl-[3%] md:pl-[5%] sm:pl-[5%]   bg-special lg:block md:block sm:block">
        <div className="lg:w-[60%] md:w-full sm:w-full">
          <div className="w-[80%] float-left">
            <ConnectKitButton.Custom>
              {({
                isConnected,
                isConnecting,
                show,
                hide,
                truncatedAddress,
                address,
                ensName,
              }) => {
                return (
                  <div>
                    {!isConnected ? (
                      <div className="w-[40%]">
                        <svg
                          onClick={show}
                          viewBox="0 0 178 32"
                          fill="none"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <rect
                            width="178"
                            height="32"
                            rx="16"
                            fill="#ADFFD8"
                          />
                          <path
                            d="M19.96 20.976C20.4187 20.976 20.808 20.9013 21.128 20.752C21.4587 20.592 21.7253 20.384 21.928 20.128C22.1413 19.8613 22.296 19.5627 22.392 19.232C22.4987 18.8907 22.552 18.5333 22.552 18.16V17.968H23.896V18.16C23.896 18.7253 23.8107 19.2587 23.64 19.76C23.4693 20.2507 23.2187 20.6827 22.888 21.056C22.5573 21.4187 22.1467 21.7067 21.656 21.92C21.1653 22.1227 20.6 22.224 19.96 22.224C18.7227 22.224 17.7573 21.8347 17.064 21.056C16.3707 20.2773 16.024 19.1413 16.024 17.648V15.152C16.024 13.7013 16.3707 12.576 17.064 11.776C17.7573 10.976 18.7227 10.576 19.96 10.576C20.6 10.576 21.1653 10.6827 21.656 10.896C22.1467 11.0987 22.5573 11.3867 22.888 11.76C23.2187 12.1227 23.4693 12.5547 23.64 13.056C23.8107 13.5467 23.896 14.0747 23.896 14.64V14.832H22.552V14.64C22.5413 14.2773 22.4827 13.9253 22.376 13.584C22.28 13.2427 22.1253 12.944 21.912 12.688C21.7093 12.4213 21.448 12.2133 21.128 12.064C20.808 11.904 20.4187 11.824 19.96 11.824C19.096 11.824 18.4453 12.1387 18.008 12.768C17.5813 13.3973 17.368 14.224 17.368 15.248V17.552C17.368 18.6507 17.5813 19.4987 18.008 20.096C18.4453 20.6827 19.096 20.976 19.96 20.976ZM33.6769 18.128C33.6769 18.7893 33.5649 19.376 33.3409 19.888C33.1275 20.3893 32.8395 20.816 32.4769 21.168C32.1142 21.5093 31.6875 21.7707 31.1969 21.952C30.7169 22.1333 30.2155 22.224 29.6929 22.224C29.1595 22.224 28.6529 22.1333 28.1729 21.952C27.6929 21.7707 27.2715 21.5093 26.9089 21.168C26.5462 20.816 26.2529 20.3893 26.0289 19.888C25.8155 19.376 25.7089 18.7893 25.7089 18.128V17.936C25.7089 17.2853 25.8155 16.7093 26.0289 16.208C26.2529 15.696 26.5462 15.264 26.9089 14.912C27.2822 14.56 27.7089 14.2933 28.1889 14.112C28.6689 13.9307 29.1702 13.84 29.6929 13.84C30.2155 13.84 30.7169 13.9307 31.1969 14.112C31.6769 14.2933 32.0982 14.56 32.4609 14.912C32.8342 15.264 33.1275 15.696 33.3409 16.208C33.5649 16.7093 33.6769 17.2853 33.6769 17.936V18.128ZM29.6929 21.04C30.0769 21.04 30.4289 20.976 30.7489 20.848C31.0795 20.7093 31.3675 20.512 31.6129 20.256C31.8582 20 32.0502 19.696 32.1889 19.344C32.3275 18.9813 32.3969 18.576 32.3969 18.128V17.936C32.3969 17.5093 32.3275 17.12 32.1889 16.768C32.0502 16.4053 31.8582 16.096 31.6129 15.84C31.3675 15.584 31.0795 15.3867 30.7489 15.248C30.4182 15.0987 30.0662 15.024 29.6929 15.024C29.3195 15.024 28.9675 15.0987 28.6369 15.248C28.3062 15.3867 28.0182 15.584 27.7729 15.84C27.5275 16.096 27.3355 16.4053 27.1969 16.768C27.0582 17.12 26.9889 17.5093 26.9889 17.936V18.128C26.9889 18.576 27.0582 18.9813 27.1969 19.344C27.3355 19.696 27.5275 20 27.7729 20.256C28.0182 20.512 28.3009 20.7093 28.6209 20.848C28.9515 20.976 29.3089 21.04 29.6929 21.04ZM37.2338 22H35.9858V14.064H37.2338V15.408H37.4258C37.9164 14.3627 38.7698 13.84 39.9858 13.84C40.9031 13.84 41.6338 14.128 42.1778 14.704C42.7218 15.2693 42.9938 16.1227 42.9938 17.264V22H41.7458V17.52C41.7458 16.688 41.5591 16.064 41.1858 15.648C40.8124 15.232 40.3058 15.024 39.6658 15.024C38.9084 15.024 38.3111 15.2853 37.8738 15.808C37.4471 16.32 37.2338 17.008 37.2338 17.872V22ZM47.0306 22H45.7826V14.064H47.0306V15.408H47.2226C47.7133 14.3627 48.5666 13.84 49.7826 13.84C50.7 13.84 51.4306 14.128 51.9746 14.704C52.5186 15.2693 52.7906 16.1227 52.7906 17.264V22H51.5426V17.52C51.5426 16.688 51.356 16.064 50.9826 15.648C50.6093 15.232 50.1026 15.024 49.4626 15.024C48.7053 15.024 48.108 15.2853 47.6706 15.808C47.244 16.32 47.0306 17.008 47.0306 17.872V22ZM56.4915 18.416C56.5235 19.2053 56.7688 19.84 57.2275 20.32C57.6862 20.8 58.3262 21.04 59.1475 21.04C59.5208 21.04 59.8462 20.9973 60.1235 20.912C60.4008 20.8267 60.6355 20.7093 60.8275 20.56C61.0302 20.4107 61.1902 20.24 61.3075 20.048C61.4355 19.8453 61.5368 19.632 61.6115 19.408L62.7955 19.728C62.5715 20.464 62.1555 21.0667 61.5475 21.536C60.9502 21.9947 60.1395 22.224 59.1155 22.224C58.5502 22.224 58.0275 22.128 57.5475 21.936C57.0782 21.7333 56.6728 21.4507 56.3315 21.088C55.9902 20.7253 55.7235 20.2933 55.5315 19.792C55.3395 19.2907 55.2435 18.736 55.2435 18.128V17.744C55.2435 17.1893 55.3395 16.672 55.5315 16.192C55.7342 15.712 56.0115 15.3013 56.3635 14.96C56.7155 14.608 57.1262 14.336 57.5955 14.144C58.0755 13.9413 58.5928 13.84 59.1475 13.84C59.7982 13.84 60.3582 13.9627 60.8275 14.208C61.3075 14.4427 61.6968 14.736 61.9955 15.088C62.3048 15.44 62.5288 15.824 62.6675 16.24C62.8168 16.656 62.8915 17.04 62.8915 17.392V18.416H56.4915ZM59.1475 15.024C58.7955 15.024 58.4648 15.0827 58.1555 15.2C57.8568 15.3067 57.5902 15.4613 57.3555 15.664C57.1315 15.8667 56.9448 16.1067 56.7955 16.384C56.6568 16.6507 56.5662 16.944 56.5235 17.264H61.6435C61.6222 16.9227 61.5368 16.6133 61.3875 16.336C61.2488 16.0587 61.0622 15.824 60.8275 15.632C60.6035 15.44 60.3422 15.2907 60.0435 15.184C59.7555 15.0773 59.4568 15.024 59.1475 15.024ZM72.8004 19.184C72.715 19.6213 72.5657 20.0267 72.3524 20.4C72.1497 20.7733 71.8884 21.0987 71.5684 21.376C71.2484 21.6427 70.875 21.8507 70.4484 22C70.0217 22.1493 69.547 22.224 69.0244 22.224C68.4697 22.224 67.9417 22.1333 67.4404 21.952C66.9497 21.7707 66.5177 21.5093 66.1444 21.168C65.771 20.816 65.4724 20.3893 65.2484 19.888C65.035 19.3867 64.9284 18.8107 64.9284 18.16V17.968C64.9284 17.328 65.035 16.752 65.2484 16.24C65.4724 15.728 65.771 15.296 66.1444 14.944C66.5177 14.592 66.9497 14.32 67.4404 14.128C67.9417 13.936 68.4697 13.84 69.0244 13.84C69.5257 13.84 69.9897 13.9147 70.4164 14.064C70.843 14.2133 71.2164 14.4267 71.5364 14.704C71.867 14.9707 72.1337 15.2907 72.3364 15.664C72.5497 16.0373 72.6937 16.4427 72.7684 16.88L71.5204 17.168C71.4884 16.8907 71.4084 16.624 71.2804 16.368C71.163 16.1013 70.9977 15.872 70.7844 15.68C70.5817 15.4773 70.331 15.3173 70.0324 15.2C69.7337 15.0827 69.387 15.024 68.9924 15.024C68.6084 15.024 68.2457 15.0987 67.9044 15.248C67.5737 15.3867 67.2804 15.5893 67.0244 15.856C66.7684 16.112 66.5657 16.4213 66.4164 16.784C66.2777 17.1467 66.2084 17.5413 66.2084 17.968V18.16C66.2084 18.608 66.2777 19.0133 66.4164 19.376C66.5657 19.728 66.7684 20.0267 67.0244 20.272C67.2804 20.5173 67.579 20.7093 67.9204 20.848C68.2617 20.976 68.6297 21.04 69.0244 21.04C69.419 21.04 69.7604 20.9813 70.0484 20.864C70.347 20.736 70.5977 20.576 70.8004 20.384C71.0137 20.1813 71.179 19.952 71.2964 19.696C71.4244 19.44 71.5097 19.1733 71.5524 18.896L72.8004 19.184ZM74.9013 14.064H77.3973V10.8H78.6453V14.064H81.7173V15.216H78.6453V20.368C78.6453 20.688 78.7893 20.848 79.0773 20.848H81.3333V22H78.6293C78.2666 22 77.9679 21.8827 77.7333 21.648C77.5093 21.4133 77.3973 21.1147 77.3973 20.752V15.216H74.9013V14.064ZM101.855 22H99.407L98.367 11.376H98.175L97.135 22H94.687L93.551 10.8H94.767L95.839 21.424H96.031L97.039 10.8H99.503L100.511 21.424H100.703L101.775 10.8H102.991L101.855 22ZM110.324 20.656H110.132C109.876 21.1893 109.519 21.584 109.06 21.84C108.612 22.096 108.137 22.224 107.636 22.224C107.113 22.224 106.628 22.1387 106.18 21.968C105.732 21.7867 105.337 21.5253 104.996 21.184C104.665 20.832 104.404 20.4053 104.212 19.904C104.02 19.4027 103.924 18.8213 103.924 18.16V17.904C103.924 17.2533 104.02 16.6773 104.212 16.176C104.404 15.6747 104.665 15.2533 104.996 14.912C105.337 14.56 105.732 14.2933 106.18 14.112C106.628 13.9307 107.103 13.84 107.604 13.84C108.148 13.84 108.639 13.9627 109.076 14.208C109.524 14.4427 109.876 14.8107 110.132 15.312H110.324V14.064H111.572V20.368C111.572 20.688 111.716 20.848 112.004 20.848H112.404V22H111.556C111.193 22 110.895 21.8827 110.66 21.648C110.436 21.4133 110.324 21.1147 110.324 20.752V20.656ZM107.764 21.04C108.137 21.04 108.479 20.9707 108.788 20.832C109.108 20.6933 109.38 20.496 109.604 20.24C109.828 19.984 110.004 19.68 110.132 19.328C110.26 18.9653 110.324 18.5653 110.324 18.128V17.936C110.324 17.5093 110.26 17.12 110.132 16.768C110.004 16.4053 109.823 16.096 109.588 15.84C109.364 15.584 109.092 15.3867 108.772 15.248C108.463 15.0987 108.127 15.024 107.764 15.024C107.391 15.024 107.049 15.0933 106.74 15.232C106.431 15.3707 106.159 15.568 105.924 15.824C105.7 16.0693 105.524 16.3733 105.396 16.736C105.268 17.088 105.204 17.4773 105.204 17.904V18.16C105.204 19.0667 105.439 19.776 105.908 20.288C106.388 20.7893 107.007 21.04 107.764 21.04ZM114.361 20.848H117.241V11.952H114.457V10.8H118.489V20.848H121.369V22H114.361V20.848ZM124.158 20.848H127.038V11.952H124.254V10.8H128.286V20.848H131.166V22H124.158V20.848ZM134.867 18.416C134.899 19.2053 135.144 19.84 135.603 20.32C136.061 20.8 136.701 21.04 137.523 21.04C137.896 21.04 138.221 20.9973 138.499 20.912C138.776 20.8267 139.011 20.7093 139.203 20.56C139.405 20.4107 139.565 20.24 139.683 20.048C139.811 19.8453 139.912 19.632 139.987 19.408L141.171 19.728C140.947 20.464 140.531 21.0667 139.923 21.536C139.325 21.9947 138.515 22.224 137.491 22.224C136.925 22.224 136.403 22.128 135.923 21.936C135.453 21.7333 135.048 21.4507 134.707 21.088C134.365 20.7253 134.099 20.2933 133.907 19.792C133.715 19.2907 133.618 18.736 133.618 18.128V17.744C133.618 17.1893 133.715 16.672 133.907 16.192C134.109 15.712 134.387 15.3013 134.739 14.96C135.091 14.608 135.501 14.336 135.971 14.144C136.451 13.9413 136.968 13.84 137.523 13.84C138.173 13.84 138.733 13.9627 139.203 14.208C139.683 14.4427 140.072 14.736 140.371 15.088C140.68 15.44 140.904 15.824 141.043 16.24C141.192 16.656 141.267 17.04 141.267 17.392V18.416H134.867ZM137.523 15.024C137.171 15.024 136.84 15.0827 136.531 15.2C136.232 15.3067 135.965 15.4613 135.731 15.664C135.507 15.8667 135.32 16.1067 135.171 16.384C135.032 16.6507 134.941 16.944 134.899 17.264H140.019C139.997 16.9227 139.912 16.6133 139.763 16.336C139.624 16.0587 139.437 15.824 139.203 15.632C138.979 15.44 138.717 15.2907 138.419 15.184C138.131 15.0773 137.832 15.024 137.523 15.024ZM143.479 14.064H145.975V10.8H147.223V14.064H150.295V15.216H147.223V20.368C147.223 20.688 147.367 20.848 147.655 20.848H149.911V22H147.207C146.845 22 146.546 21.8827 146.311 21.648C146.087 21.4133 145.975 21.1147 145.975 20.752V15.216H143.479V14.064Z"
                            fill="#121212"
                          />
                        </svg>
                      </div>
                    ) : (
                      <div>
                        <h1 className="lg:text-lg md:text-md sm:text-md bg-transparent">
                          {truncatedAddress}&nbsp;|&nbsp;
                          <span onClick={show} role="button">Disconnect</span>
                        </h1>
                      </div>
                    )}
                  </div>
                );
              }}
            </ConnectKitButton.Custom>
          </div>

          <div className="w-[8%] float-right">
            <svg
              viewBox="0 0 90 90"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M45 0C20.151 0 0 20.151 0 45C0 69.849 20.151 90 45 90C69.849 90 90 69.849 90 45C90 20.151 69.858 0 45 0ZM22.203 46.512L22.392 46.206L34.101 27.891C34.272 27.63 34.677 27.657 34.803 27.945C36.756 32.328 38.448 37.782 37.656 41.175C37.323 42.57 36.396 44.46 35.352 46.206C35.217 46.458 35.073 46.71 34.911 46.953C34.839 47.061 34.713 47.124 34.578 47.124H22.545C22.221 47.124 22.032 46.773 22.203 46.512ZM74.376 52.812C74.376 52.983 74.277 53.127 74.133 53.19C73.224 53.577 70.119 55.008 68.832 56.799C65.538 61.38 63.027 67.932 57.402 67.932H33.948C25.632 67.932 18.9 61.173 18.9 52.83V52.56C18.9 52.344 19.08 52.164 19.305 52.164H32.373C32.634 52.164 32.823 52.398 32.805 52.659C32.706 53.505 32.868 54.378 33.273 55.17C34.047 56.745 35.658 57.726 37.395 57.726H43.866V52.677H37.467C37.143 52.677 36.945 52.299 37.134 52.029C37.206 51.921 37.278 51.813 37.368 51.687C37.971 50.823 38.835 49.491 39.699 47.97C40.284 46.944 40.851 45.846 41.31 44.748C41.4 44.55 41.472 44.343 41.553 44.145C41.679 43.794 41.805 43.461 41.895 43.137C41.985 42.858 42.066 42.57 42.138 42.3C42.354 41.364 42.444 40.374 42.444 39.348C42.444 38.943 42.426 38.52 42.39 38.124C42.372 37.683 42.318 37.242 42.264 36.801C42.228 36.414 42.156 36.027 42.084 35.631C41.985 35.046 41.859 34.461 41.715 33.876L41.661 33.651C41.553 33.246 41.454 32.868 41.328 32.463C40.959 31.203 40.545 29.97 40.095 28.818C39.933 28.359 39.753 27.918 39.564 27.486C39.294 26.82 39.015 26.217 38.763 25.65C38.628 25.389 38.52 25.155 38.412 24.912C38.286 24.642 38.16 24.372 38.025 24.111C37.935 23.913 37.827 23.724 37.755 23.544L36.963 22.086C36.855 21.888 37.035 21.645 37.251 21.708L42.201 23.049H42.219C42.228 23.049 42.228 23.049 42.237 23.049L42.885 23.238L43.605 23.436L43.866 23.508V20.574C43.866 19.152 45 18 46.413 18C47.115 18 47.754 18.288 48.204 18.756C48.663 19.224 48.951 19.863 48.951 20.574V24.939L49.482 25.083C49.518 25.101 49.563 25.119 49.599 25.146C49.725 25.236 49.914 25.38 50.148 25.56C50.337 25.704 50.535 25.884 50.769 26.073C51.246 26.46 51.822 26.955 52.443 27.522C52.605 27.666 52.767 27.81 52.92 27.963C53.721 28.71 54.621 29.583 55.485 30.555C55.728 30.834 55.962 31.104 56.205 31.401C56.439 31.698 56.7 31.986 56.916 32.274C57.213 32.661 57.519 33.066 57.798 33.489C57.924 33.687 58.077 33.894 58.194 34.092C58.554 34.623 58.86 35.172 59.157 35.721C59.283 35.973 59.409 36.252 59.517 36.522C59.85 37.26 60.111 38.007 60.273 38.763C60.327 38.925 60.363 39.096 60.381 39.258V39.294C60.435 39.51 60.453 39.744 60.471 39.987C60.543 40.752 60.507 41.526 60.345 42.3C60.273 42.624 60.183 42.93 60.075 43.263C59.958 43.578 59.85 43.902 59.706 44.217C59.427 44.856 59.103 45.504 58.716 46.098C58.59 46.323 58.437 46.557 58.293 46.782C58.131 47.016 57.96 47.241 57.816 47.457C57.609 47.736 57.393 48.024 57.168 48.285C56.97 48.555 56.772 48.825 56.547 49.068C56.241 49.437 55.944 49.779 55.629 50.112C55.449 50.328 55.251 50.553 55.044 50.751C54.846 50.976 54.639 51.174 54.459 51.354C54.144 51.669 53.892 51.903 53.676 52.11L53.163 52.569C53.091 52.641 52.992 52.677 52.893 52.677H48.951V57.726H53.91C55.017 57.726 56.07 57.339 56.925 56.61C57.213 56.358 58.482 55.26 59.985 53.604C60.039 53.541 60.102 53.505 60.174 53.487L73.863 49.527C74.124 49.455 74.376 49.644 74.376 49.914V52.812V52.812Z"
                fill="white"
              />
            </svg>
          </div>
        </div>

        <div className="lg:text-left md:text-center sm:text-center  lg:w-[60%] md:w-full sm:w-full">
          <br></br>
          <span className="block mt-10"></span>
          <div>{blocksControl}</div>
        </div>
      </div>






      

     






       
                    
    </div>
  );
};

export default Playground;


{/*
OLD GENERATOR CODE 
<div className="generatorContainer">
    
          <div className="actualApp">
            
            <div>
              {gridControl}
              <div>
                Chroma
                {chromeSelector}
              </div>
              <div>
                Fill
                {fillSelector}
              </div>
              {tetriControl}
            </div>
            <div>
              <button onClick={save}>Mint</button>
            </div>
          </div>
          
                        </div> */}